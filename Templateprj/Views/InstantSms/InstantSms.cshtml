@model Templateprj.Models.InstantSms.InstantSmsModel

@{
    ViewBag.Title = "SendInstantSms";

}
<link href="~/Styles/tab.css" rel="stylesheet" />
<link href="~/Styles/modelright.css" rel="stylesheet" />

<style>
    table.dataTable > tbody > tr > td, table.dataTable > tbody > tr > th, table.dataTable > tfoot > tr > td, table.dataTable > tfoot > tr > th, table.dataTable > thead > tr > td, table.dataTable > thead > tr > th {
        padding: 5px !important;
        outline: 0;
        max-width: 150px;
        width: 150px;
        border-right: 0;
        border-bottom: 0;
        color: black;
    }
    table.dataTable thead > tr > td.sorting, table.dataTable thead > tr > td.sorting_asc, table.dataTable thead > tr > td.sorting_desc, table.dataTable thead > tr > th.sorting, table.dataTable thead > tr > th.sorting_asc, table.dataTable thead > tr > th.sorting_desc {
        font-size: 9.5pt;
        text-align: center;
        font-weight: bold;
        white-space: nowrap !important;
        table-layout: fixed;
        color: black;
    }

    .dataTables_wrapper .dt-buttons {
        float: none;
        text-align: right;
    }

    table.fixed {
        table-layout: fixed;
        width:100%!important;
    }

        table.fixed td {
            overflow: hidden;
        }
    .dataTables_wrapper .dt-buttons {
        float: none;
        text-align: right;
    }

    .date-range-selected > .ui-state-active,
    .date-range-selected > .ui-state-default {
        background: none;
        background-color: lightsteelblue;
    }

    textarea {
        resize: none;
    }

    .alert-danger {
        color: white;
    }

    .alert-success {
        color: white;
    }

    hr {
        border: 1px solid #5f004b
    }

    .box {
        padding: 20px;
        box-shadow: rgba(0, 0, 0, 0.35) 1px 5px 10px;
    }

    .blue {
        width: 60%;
        background-color: #57b4eb;
    }

    .yellow {
        width: 30%;
        background-color: yellow;
    }

    .red {
        width: 10%;
        background-color: red;
    }

    .head {
        position: sticky;
        top: 0;
        z-index: 5;
    }

    body {
        font-size: 13px !important;
    }

    .form-control {
        border-radius:10px;
        height: 20px !important;
        padding: 0px 5px !important;
        font-size: 12px !important;
        background-color: white !important;
    }

    .form-group {
        margin-bottom: 4px;
    }

    /*.navstyle {
        border: 0px solid black;
    }*/

    .navstyle > ul > li {
        border: 1px solid #5f004b;
        /*background-color: #5f004b;*/
        margin-left: 5px;
        border-top-right-radius: 10px;
        border-top-left-radius: 10px;
        width: 200px;
    }

    a {
        color: gray;
        background-color: #ebecf1;
    }

        a:hover {
            color: gray;
        }

    .active {
        background-color: #5f004b;
        color: white !important;
    }

        .active:hover {
            background-color: #5f004b;
            color: gray;
        }

    .nav-link {
        border-top-right-radius: 10px;
        border-top-left-radius: 10px;
    }

    label {
        color: #5f004b;
        font-size: 12px;
    }

    .navclr:hover {
        background-color: #ebecf1;
    }

    .cl-black {
        color: #495057 !important;
    }

    .text-danger {
        width: 109px;
        font-size: 10px;
        height: 0px;
    }

    labelvariable {
        color: #5f004b;
        font-size: 12px;
    }
</style>


<div class="row" style="margin-top:50px">
    <div class="col">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", id = "Idform" }))
        {
            @Html.AntiForgeryToken()
            <div class="container">
                <div class="row">

                    <div class="wizard-navigation">
                        <div class="col-xs-12 navstyle">
                            <ul class="nav">
                                <li class="nav-item" style="width: 150px;height:35px">
                                    <a style="font-size:12px;font-weight:bold;" id="campaigncreationnavitem" class="nav-link active" onclick="resetfunction()" href="#Instantsmsnav" data-toggle="tab" role="tab" aria-controls="about" aria-selected="true">
                                        <span class="now-ui-icons loader_gear sidebar-mini-icon mt-1"></span>
                                        INSTANT SMS
                                    </a>
                                </li>

                                <li class="nav-item " style="width: 111px;height:35px">
                                    <a style="font-size:12px;font-weight:bold;" id="reportsnavitem" class="nav-link" href="#reportsnav" onclick="resetfunction()" data-toggle="tab" role="tab" aria-controls="account" aria-selected="false">
                                        <span class="now-ui-icons loader_gear sidebar-mini-icon mt-1"></span>
                                        REPORTS
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <div class="tab-content">
                <div class="tab-pane show active navclr" id="Instantsmsnav">
                    <div style="margin-top:5px;background:white" class="col-md-12">
                        <p>
                            <a class="btn btn-block text-white dropdown-toggle" style="margin-left:5px;height:25px;text-align:left;background-color:grey;font-size:10px;vertical-align:middle;font-weight:bold;"
                               data-toggle="collapse" href="#collapseInstantsms" role="button" aria-expanded="false">
                                INSTANT SMS
                            </a>
                        </p>

                        @*<div class="row" style="margin-left:4px;width:100% !important;">*@
                        <div class="collapse" id="collapseInstantsms">

                            <div class="container">
                                @*<div class="row justify-content-center">*@
                                @*<div class="col-md-4">
                                    <div class="row">
                                        <div class="col-md-4 col-4" style="text-align:right">
                                            @Html.Label("SMS Type*")

                                        </div>
                                        <div class="form-group col-md-8 col-8">
                                            @Html.DropDownListFor(m => m.SmsTypeId, Model.SmsTypes, new { @class = "form-control cl-black", @style = "width:117px", @required = "required" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="row">
                                        <div class="col-md-4 col-4" style="text-align:right">
                                            @Html.Label("Sender Id")

                                        </div>
                                        <div class="form-group col-md-8 col-8">
                                            @Html.DropDownListFor(m => m.SenderId, Model.Senders, new { @class = "form-control cl-black", @style = "width:117px", @required = "required" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="row">
                                        <div class="col-md-4 col-4" style="text-align:right">
                                            @Html.Label("Template ID*")
                                        </div>
                                        <div class="form-group col-md-8 col-8">
                                            @Html.DropDownListFor(m => m.TemplateId, Model.Templates, new { @class = "form-control cl-black", @style = "width:117px", @required = "required" })
                                        </div>
                                    </div>
                                </div>*@
                                <div class="row">
                                    <div class="row" style="margin-top:5px;margin-bottom:10px;">
                                        <div class="col-md" id="templateiddiv">
                                            @Html.Label("Template", new { style = "margin-left:15px;" })<span style="color:red;">*</span>
                                            <input id="btnShow" value="Select Template" style="color:white; background-color:#5f004b;border:none;border-radius:10px;" type="button" />
                                        </div>
                                    </div>
                                </div>



                                @*</div>*@
                                <div class="col-md-8">
                                    <div id="smstemplatediv" style="display:none;">
                                        <div class="row">
                                            @Html.Label("Sender:", new { style = "margin-left:15px;" })

                                            @Html.TextAreaFor(m => m.SenderId, new { @class = " form-control", required = "required", @style = "display:none;width:80px; height: auto !important;background:white;", @readonly = "readonly", @rows = "1" })
                                            <div class="col-md">
                                                <span id="bindsenderName" style="color:black;"></span>
                                            </div>

                                            @Html.Label("Content Type:", new { style = "margin-left:15px;" })
                                            @Html.HiddenFor(m => m.unicodeStatus, new { Value = "-1" })
                                            @Html.HiddenFor(m => m.TemplateId, new { Value = "-1" })

                                            <div class="col-md">
                                                @*<span id="bindtemplatetype"></span>*@
                                                @Html.TextAreaFor(m => m.ContentType, new { @class = "form-control nonedit", required = "required", @style = "width:80px;border: none;outline: none;color:black;height: auto !important; ", @readonly = "readonly", @rows = "1" })
                                            </div>
                                            @*</div>

                                            <div class="row">*@
                                            @Html.Label("Template Name:", new { style = "margin-left:15px;" })
                                            <div class="col-md-4">
                                                @*<span id="bindtemplatetype"></span>*@
                                                <span id="bindtemplatename" style="color:black;"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div id="StaticSmsDiv" class="row" style="margin-left:4px;margin-top:4px;width:100% !important;display:none;">


                                    <div class="col-md-12" style="text-align:right;color:#5f004b"> SMS Count: <span id="smscount"></span> (<span style="color:red;">*</span>W/o variables)</div>


                                    <div class="form-group col-md-12">
                                        @Html.TextAreaFor(m => m.SmsContent, new { @class = "form-control", required = "required", @style = "height: auto !important;background:white; color:black !important;", @readonly = "readonly", @rows = "5" })

                                    </div>
                                </div>

                                <div id="dynamicSmsDiv" class="row" style="margin-left:4px;margin-top:4px;width:75% !important;display:none;">

                                    <div class="col-md-12" style="color:#5f004b"><u><b>Define Parameters</b></u><span style="color:red;">*[Minimum 3 characters required]</span></div>

                                    <div class="col-md-6" style="color:#5f004b">
                                        From Message Script
                                    </div>
                                    <div class="col-md-6" style="color:#5f004b">
                                        Rename Variable
                                    </div>

                                    <div class="col-md-12" id="generated">

                                    </div>

                                </div>

                                <div class="row" id="sendbutton" style="margin-left:4px;width:100% !important; text-align:right;display:none">
                                    <div class="col-12">
                                        <button style="margin-left:482px;background:linear-gradient(90deg,#0077b3 0,#0099e6 60%,#0077b3);color:white;border-radius:20px;" type="button" id="send">Send</button>
                                    </div>
                                </div>


                            </div>
                            <div id="testsmsdiv" class="row" style="display:none">

                                <a class="btn btn-block text-white dropdown-toggle" style="margin-left:5px;height:25px;text-align:left;background-color:grey;font-size:10px;vertical-align:middle;font-weight:bold;"
                                   data-toggle="collapse" href="#collapseTestSms" role="button" aria-expanded="false">
                                    SEND SMS
                                </a>

                                <div class="row" id="collapseTestSms" style="margin-left:4px;width:100% !important;">

                                    <div class="row" id="div_inpunumber" style="margin-left:4px;width:100% !important;">
                                        <div class="col-12">   @Html.Label("Mobile Numbers", new { style = "font-weight:bold;" }) <span style="color:red;">*[A comma is used to separate mobile numbers, and the maximum and minimum lengths are 12 and 8, respectively.]</span></div>
                                        <div class="col-12">
                                            <textarea class="form-control" style="width:90% !important;min-height:75px;" id="msisdnNumbers" rows="3"></textarea>
                                        </div>

                                        <div class="row" style="margin-left:4px;width:100% !important; text-align:right;">
                                            <div class="col-12">
                                                <button style="margin-right:25px;background:linear-gradient(90deg,#0077b3 0,#0099e6 60%,#0077b3);color:white;border-radius:20px;" type="button" id="btn_sendNumber">Send</button>
                                            </div>
                                        </div>
                                    </div>



                                    <div class="row" id="div_table" style="display:none; width:100% !important;margin-left:5px;">
                                        <div class="d-flex flex-row-reverse" style="width:100%">

                                            <button id="btn_add" style="background-color:white !important;float:right !important;margin-right:25px;">
                                                <i class="fa fa-plus" aria-hidden="true" style="color:green;"></i>
                                            </button>
                                        </div>
                                        <div class="table-responsive">
                                            <table class="table-borderless fixed" id="tblEntAttributes">
                                                <thead>
                                                    <tr>
                                                        <th style="width:20%;color:#5f004b">Mobile Number</th>
                                                        <th style="width:60%;color:#5f004b">SMS</th>
                                                        <th style="width:10%;color:#5f004b">Count</th>
                                                        <th style="width:10%;color:#5f004b">Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody class="table-body" style="color :black !important;"></tbody>
                                            </table>
                                        </div>

                                        @*//table*@


                                        <div class="row" style="margin-left:10px; width:100% !important; text-align:right;">
                                            <div class="col-12">
                                                <button style="margin-right:40px;background:linear-gradient(90deg,#0077b3 0,#0099e6 60%,#0077b3);;color:white;border-radius:20px;" type="button" id="sendsms">Send</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <input id="numberOfRaw"
                       name="numberOfRaw"
                       type="hidden"
                       value="" />
                <input id="smsCount"
                       name="charCount"
                       type="hidden"
                       value="" />
                <input id="smsLeg"
                       name="partsCount"
                       type="hidden"
                       value="" />
                   

                <div class="tab-pane navclr" style="background:white;" id="reportsnav">
                    <div class="">
                        <a class="btn btn-block text-white dropdown-toggle" style="margin-left:5px;height:25px;text-align:left;background-color:gray;font-size:10px;vertical-align:middle;font-weight:bold;"
                           data-toggle="collapse" href="#collapseInstantreport" role="button" aria-expanded="false">
                            REPORTS
                        </a>
                        <div class="row" id="collapseInstantreport" style="margin-left:5px;">
                            <div class="col-sm-2">
                                <div class="form-group">
                                    @Html.Label("Date Range")<span style="color:red;">*</span>
                                    @Html.TextBoxFor(m => m.dateFrom, new { @class = "form-control", style = "background:white", placeholder = "-From & To Dates-", @readonly = "@readonly" })
                                    @*@Html.TextBoxFor(m => m.dateTo, new { @class = "form-control", style = "background:white", required = "required", placeholder = "-To Date-", @readonly = "@readonly" })*@
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <div class="form-group">
                                    @Html.Label("MSISDN")
                                    @Html.TextBoxFor(m => m.MSISDN, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <div class="form-group">
                                    @Html.Label("TEMPLATES NAME")
                                    @Html.DropDownListFor(m => m.Template, Model.TemplateList, new { @class = "form-control cl-black" })
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <div class="form-group">
                                    @Html.Label("STATUS")
                                    @Html.DropDownListFor(m => m.reportStatus, Model.StatusList, new { @class = "form-control cl-black" })
                                </div>
                            </div>

                            <div class="row pull-right">
                                <button type="button" id="btn_search" style="background:linear-gradient(90deg,#0077b3 0,#0099e6 60%,#0077b3);color:white;margin-left:15px;margin-top:15px;">
                                    Search
                                </button>
                            </div>
                        </div>
                        <hr />
                        <div class="row" style="margin-top:50px;">
                            <div class="col-md-12">
                                <div class="card mt-1" style="border:0px;box-shadow:none;">


                                    <div class="card-body col-sm-12" style="width:1100px">
                                        <div class="col-sm-12" id="divTablereport" style="overflow-x:auto !important;">
                                            <table id="tbl_report" class="table-striped table-bordered dataTable dtr-inline" role="grid" aria-describedby="datatable_info" style="width:100% !important;" cellspacing="0"></table>
                                        </div>
                                        <div class="alert alert-info" id="divNoData" style="display:none;">
                                            <span>No data found for the search</span>
                                        </div>
                                        @*<div class="row">
                                            <div id="loading" class="col-sm-12" style="display:none;text-align:center;" st><img src="~/Content/Images/loading.gif" style="width:100px;height:50px;" /></div>
                                        </div>*@
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="templateModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">

                <div class="modal-dialog" style="width:850px;margin-left:350px;">
                    @*<div style="height:40px; margin-left:100px;  margin-top:10px;">*@

                    @*</div>*@

                    <div class="modal-content" style="width:850px;height:550px;">
                        <div class="modal-header">
                            @Html.Label("SMS TEMPLATE", new { style = "font-weight:bold; font-size:18px;" })
                            <button type="button" id="closebtn" class="btn btn-default" data-dismiss="modal">X</button>
                        </div>

                        <div id="modal-content" class="row ml-3 mt-4 text-break" style="height:550px;width:820px;">

                            <div class="row ml-3 mt-4" style="width:600px; height:70px;  ">
                                <div class="col-md-3">
                                    @Html.Label("Template Name")
                                    <div class="form-group">
                                        @Html.DropDownListFor(m => m.pouptemplateName, Model.pouptemplateNameList, new { @class = "form-control cl-black", @required = "required" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.Label("Template Type")
                                    <div class="form-group">
                                        @Html.DropDownListFor(m => m.pouptemplateType, Model.pouptemplateTypeList, new { @class = "form-control cl-black", @required = "required" })
                                    </div>
                                </div>
                                @*<div class="col-md-3">
                                    @Html.Label("Template Status")
                                    <div class="form-group">
                                        @Html.DropDownListFor(m => m.pouptemplateStatus, Model.pouptemplateStatusList, new { @class = "form-control cl-black", @required = "required" })
                                    </div>
                                </div>*@
                                <div class="col-md-3">
                                    @Html.Label("Content Type")
                                    <div class="form-group">
                                        @Html.DropDownListFor(m => m.poupContentType, Model.poupContentTypeList, new { @class = "form-control cl-black", @required = "required" })
                                    </div>
                                </div>
                            </div>
                            @*<div class="col-md-3">
                                @Html.Label("Campaign Type")
                                <div class="form-group">
                                    @Html.DropDownListFor(m => m.listCampaignType, Model.listCampaignTypeList, new { @class = "form-control cl-black", @required = "required" })

                                </div>
                            </div>*@
                            <div class="col-md-2">
                                <br />
                                @*<button type="button" id="btn_search" style="height:35px;background-color:#212121;color:white;width:100px;" class="btn btn-block">Search</button>*@
                                <button type="button" id="serchInstant" style="background:linear-gradient(90deg,#0077b3 0,#0099e6 60%,#0077b3); color:white;margin-left:-150px; margin-top:25px;">
                                    Search
                                </button>
                            </div>
                            <div class="modal-body" id="modalTable" style="overflow-y:auto; overflow-x: auto; width:800px;height:300px;">
                                <table id="tbl_templateDetails" class="table-striped table-bordered dataTable dtr-inline" role="grid" aria-describedby="datatable_info" style="width:100% !important;" cellspacing="0"></table>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        }

    </div>

</div>

@section scripts {
    <script>

        $(document).ready(function () {
            $("#collapseInstantsms").addClass("show");
        });
        
        function isValidNumber(numbers) {

            for (i = 0; i < numbers.length; i++) {
                if (!$.isNumeric(numbers[i]) || numbers[i].length < 8 || numbers[i].length>12) {
                    return false;
                }
            }
            return true;
        }

        $(document).ready(function () {
            $(document).on('click', '#btn_add', function (e) {
                e.preventDefault();
                var arrVariables = getVariables();
                constructNewRows(arrVariables, $("#numberOfRaw").val())
                //console.log($("#numberOfRaw").val());

            });
            document.getElementById('msisdnNumbers').addEventListener('keydown', function (ev) {
                var allow = 0;
                if (ev.key == "0" || ev.key == "1" || ev.key == "2" || ev.key == "3" || ev.key == "4" || ev.key == "5" || ev.key == "6" ||
                    ev.key == "7" || ev.key == "8" || ev.key == "9" || ev.key == "," || ev.key == "+" || ev.key == "Backspace" || ev.key == "Delete")
                    allow = 1;


                if(allow==0)
                    ev.preventDefault();
            });

            $(document).on('click', '#sendsms', function (e) {

                var instantSmsModel = {};
                var additionItems = new Array();
                var i = 0;
                var isValid = true;
                $("#tblEntAttributes tbody tr").each(function () {
                    if (i % 2 == 0) {
                    var row = $(this);
                        var orders = {};
                        orders.mobileNumber = row.find("[id*=spn_mob]").text();
                        orders.message = row.find("[id*=spn_message]").text();
                        var counts = row.find("[id*=spn_count]").text().split('/');
                        orders.count = parseInt(counts[1]);
                        orders.smsLength = parseInt(counts[0]);
                        additionItems.push(orders);

                        if (row.find("[id*=icon_alert]").length)         // use this if you are using id to check
                        {
                            isValid = false;
                            return;
                        }

                    }
                    i++;
                });
              
                instantSmsModel.smsTypeId = $("#SmsTypeId").val();
                instantSmsModel.senderId = $("#SenderId").val();
                instantSmsModel.templateId = $("#TemplateId").val();
                instantSmsModel.unicodestatus = $("#unicodeStatus").val();
                instantSmsModel.messages = additionItems;
                instantSmsModel.variables = getVariablesWithName();
                if ($("#numberOfRaw").val() > 0) {

                    if (isValid) {
                        $.ajax({
                            url: "@Url.Action("SendInstatntSms", "InstantSms")",
                            type: 'POST',
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            data: JSON.stringify(instantSmsModel),
                            success: function (e) {

                                jsondata = JSON.parse(e);
                                if (jsondata.status == "1") {
                                    SuccessMsg("Successfully send the sms");
                                    resetfunction();
                                }
                                else {
                                    ErrorMsg("Failed to send the sms");
                                }
                            }
                        });

                    }
                    else {
                        ErrorMsg("Please confirm the entries, there are some alerts exist.")
                    }
                }
                else 
                     ErrorMsg("No SMS to send");    
            });

            $(function () {
                $("#serchInstant").click(function () {
                    loadtemplateSearchReportInstant();
                });
            });

            $(function () {
               
                $("#btnShow").click(function () {

                    var rpt_datatable = $("#tbl_templateDetails").DataTable({
                        responsive: false,
                        deferRender: false,
                        searching: false,
                        paging: false,
                        info: false,

                        "destroy": true,
                        data: null,
                        columns: null,
                        autoWidth: false,
                        order: []

                    });
                    document.getElementById("tbl_templateDetails").innerHTML = "";

                    $("select#pouptemplateName").val('0');
                    $("select#pouptemplateType").val('0');
                    $("select#pouptemplateStatus").val('0');
                    $("select#poupContentType").val('0');
                    $("#templateModal").modal('show');
                });
            });

            @*function getSendersBySmsType(smstype)
            {
                $.ajax({
                    url: "@Url.Action(MVC.Campaign.GetSenderIdFromSmsType())",
                    type: 'GET',
                    data: { smstype: smstype},
                    success: function (minames) {

                        $("#SenderId").html("");
                        $("#SenderId").append(
                                $('<option></option>').val('').html('-Select-'));
                            $.each(minames, function (i, minames) {
                                $("#SenderId").append(
                                    $('<option></option>').val(minames.VALUE).html(minames.TEXT));
                            });
                    }
                });
            }

            function getTemplatesBySenderAndSMSType(smstype, senderId)
            {

                $.ajax({
                    url: "@Url.Action(MVC.Campaign.GetTemplateIdfromSenderId())",
                    type: 'GET',
                    data: { senderId: senderId, smstype: smstype },
                    success: function (minames) {

                        $("#TemplateId").html("");
                        $("#TemplateId").append(
                                $('<option></option>').val('').html('-Select-'));
                            $.each(minames, function (i, minames) {
                                $("#TemplateId").append(
                                    $('<option></option>').val(minames.VALUE).html(minames.TEXT));
                            });
                    }
                });
            }*@

            function isNumberKey(evt) {
                var charCode = (evt.which) ? evt.which : evt.keyCode
                if (charCode > 31 && (charCode < 48 || charCode > 57))
                    return false;
                return true;
            }

            document.getElementById('mob').addEventListener('keydown', function (ev) {
                var allow = 0;
                if (ev.key == "0" || ev.key == "1" || ev.key == "2" || ev.key == "3" || ev.key == "4" || ev.key == "5" || ev.key == "6" ||
                    ev.key == "7" || ev.key == "8" || ev.key == "9" || ev.key == "," || ev.key == "+" || ev.key == "Backspace" || ev.key == "Delete")
                    allow = 1;


                if (allow == 0)
                    ev.preventDefault();
            });
            //On Template selected
               $('#TemplateId').on('change', function () {

                    var templateId = $('#TemplateId').val();
                    var smstype = $('#SmsTypeId').val();
                    var Variablcnt;
                    //var variableNames;
                   document.getElementById("SmsContent").innerHTML="";

                     $.ajax({
                        url: "@Url.Action(MVC.Campaign.GetmessagecontentfromTemplate())",
                        type: 'GET',
                         data: { templateId: templateId},
                         success: function (minames) {
                             var obj = JSON.parse(minames);
                             if ($('#ContentType').val() == "STATIC") {
                                 document.getElementById("SmsContent").innerHTML = obj[0].templateContent;
                                 Variablcnt = obj[0].variableCount;
                                 document.getElementById("smscount").innerHTML = obj[0].smsLength;
                             }
                             else if ($('#ContentType').val() == "DYNAMIC") {
                                 document.getElementById("SmsContent").innerHTML = obj[0].templateContent;
                                    Variablcnt = obj[0].variableCount;
                                 document.getElementById("smscount").innerHTML = obj[0].smsLength;
                             }
                             afterAjax()
                        }
                    });

                   function afterAjax() {

                       const container = document.querySelector('#generated');

                        removeAllChildNodes(container);
                       var div = document.createElement('div');
                       div.className = "raw";

                       for (i = 0, j = 1; i < Variablcnt; i++ , j++) {

                           var div = document.createElement('row');
                           div.innerHTML = '<div class="row"><div class="col-md-6"><input class=" form-control" id="SMSvariable_' + i + '__variableName" name="SMSvariable[' + i + '].variableName" required="required" readonly="readonly" style="background:white;" type="text" value="VAR' + j + '"></div>  <div class="col-md-6"><input class=" form-control" id="SMSvariable_' + i + '__renameVariable" name="SMSvariable[' + i + '].renameVariable" required="required" type="text" value=""></div></div>';

                           document.getElementById("generated").appendChild(div);
                       }
                    }
               });

        });

            $(document).ready(function () {

                $('#send').on('click', function () {

                    //if ($('#SmsTypeId').val() <= 0 || $('#SenderId').val() <= 0 || $('#SmsContent').val().length <= 0) {

                    //    ErrorMsg("Please fill all fields");
                    //}
                     if ($("#Idform").valid()) {
                        $("input[id=btnShow]").attr("disabled", "disabled");
                        var arrVariables = getVariables();
                            $('#div_inpunumber').show();
                            $('#testsmsdiv').show();
                            $('#sendbutton').hide();

                    } else {
                        ErrorMsg("Please fill all fields");
                    }
                });

                $(document).on('click', '.btn_hide', function (e) {
                    e.preventDefault();

                    var $row_c = $(this).closest("tr"),
                        $tds_c = $row_c.find("td");
                    var isValid = isCurrentRawIsValid($tds_c);
                    if (isValid) {
                        var $row = $(this).closest("tr").prev(),
                            $tds = $row.find("td");
                        var i = 0;
                        var inputext = $('#SmsContent').val();
                        
                        $.each($tds_c, function () {

                            $edtv = $(this).find("input");
                            if (i == 0) {
                                mob = $(this).find("input").val();
                            }
                            $.each($edtv, function () {
                                inputext = inputext.replace('[' + $(this).attr('id') + ']', $(this).val())
                            });
                            i++;
                        });

                        getSMSCountByTemplate(inputext).then(function (data1) {
                            i = 0;
                            $.each($tds, function () {
                                switch (i) {
                                    case 0: $(this).find("span").text(mob); break;
                                    case 1:
                                        $(this).find("span").text(inputext);
                                        $(this).find("#icon_alert").remove();
                                        break;
                                    case 2: $(this).find("span").text(data1.SmsLeg + '/' + data1.SmsLength); break;
                                }
                                i++;
                            });
                        }).catch(function (err) {
                            console.log(err)
                        });
                    }
                    else {

                        $row_c.addClass("collapse show");
                        ErrorMsg("Please check your inputs.Mobile number should have minimum 8 digits.");
                    }
                });

                $('#btn_sendNumber').on('click', function () {

                    if ($('#msisdnNumbers').val().charAt($('#msisdnNumbers').val().length - 1) == ",")
                        $('#msisdnNumbers').val($('#msisdnNumbers').val().substring(0, $('#msisdnNumbers').val().length - 1));

                    var numbers = $('#msisdnNumbers').val().split(",");
                    if (($('#ContentType').val() == "STATIC" && numbers.length - 1 < 10) || ($('#ContentType').val() == "DYNAMIC" && numbers.length - 1 < 10)) {

                        if (isValidNumber(numbers)) {
                            getSMSCountByTemplate($('#SmsContent').val()).then(function (data) {

                                $('#div_table').show();
                                $('#div_inpunumber').hide();
                                var arrVariables = getVariables();
                                constructRows(numbers, arrVariables, data);
                            }).catch(function (err) {
                                console.log('tt'+err)
                            });
                        } else {
                            ErrorMsg("Invalid numbers");
                        }
                    }
                    else {
                        ErrorMsg("Number exceeds maximum limit.");
                    }
                });

                $('body').on('click', '[id*=btnEdit]', function () {
                    var data;
                    if ($(window).width() > 320) {
                        data = $(this).parents('tr').find('td');
                    } else {
                        data = $(this).parents('tr').prev().eq(0).find('td');
                    }
                    //  $(event).closest('tr').children('td:eq(0)').text();
                    var id = data.eq(0).html();
                    var fname = data.eq(1).html();
                    var camid = $(this).parents('tr').find('.wrapperDivHidden').val();             
                    var parts = document.getElementById("part_" + camid).value;
                   // var tempid = document.getElementById("part_" + camid).value;
                    var array = parts.split(",");
                    var partscount = array[0];
                    var Variablcnt = array[1];
                    var unicodestatus = array[3];
                    var sendrId = array[2];
                    //  = $(event).closest('tr').children('td:eq(0)').text();

                    $('#dynamicSmsDiv').hide();
                    $('#StaticSmsDiv').hide();


                    if (data.eq(2).text() == "STATIC") {
                        $('#smstemplatediv').show();
                        $('#templateiddiv').show();
                        $('#sendbutton').show();
                        $('#StaticSmsDiv').show();
                    }
                    else if (data.eq(2).text() == "DYNAMIC") {
                        $('#smstemplatediv').show();
                        $('#templateiddiv').show();
                        $('#sendbutton').show();
                        $('#StaticSmsDiv').show();
                        $('#dynamicSmsDiv').show();
                    }
                    document.getElementById("bindsenderName").innerHTML = data.eq(0).text();
                    document.getElementById("ContentType").innerHTML = data.eq(2).text();
                    document.getElementById("smscount").innerHTML = data.eq(5).text() + '/' + partscount;//$(event).closest('tr').children('td:eq(7)').text() + '';
                    document.getElementById("bindtemplatename").innerHTML = data.eq(1).text();;
                    document.getElementById("SmsContent").innerHTML = data.eq(3).text();
                    document.getElementById("SenderId").innerHTML = sendrId;
                    document.getElementById("unicodeStatus").value = unicodestatus;
                    document.getElementById("TemplateId").value = camid;                
                    const container = document.querySelector('#generated');
                    removeAllChildNodes(container);
                    for (i = 0, j = 1; i < Variablcnt; i++ , j++)
                    {

                        var div = document.createElement('row');
                        div.innerHTML = '<div class="row" style="margin-top:10px;" ><div class="col-md-6"><input class=" form-control" id="SMSvariable_' + i + '__variableName" name="SMSvariable[' + i + '].variableName"   readonly="readonly" MaxLength="12"  MinLength="3" style="background:white;" type="text" value="VAR' + j + '"></div>  <div class="col-md-6"><input class=" form-control" id="SMSvariable_' + i + '__renameVariable" name="SMSvariable[' + i + '].renameVariable" required="required" MaxLength="12" MinLength="3" type="text" value=""></div></div>';
                        document.getElementById("generated").appendChild(div);
                    }
                    $('#closebtn').click();
                });


                $(document).on('click', '#btn_remove', function (e) {
                    e.preventDefault();
                    var $row_n = $(this).closest("tr").next("tr");
                    $row_n.remove();

                    var $row_c = $(this).closest("tr");
                    $row_c.remove();
                    $("#numberOfRaw").val(parseInt($("#numberOfRaw").val()) - 1);
                });
            });

            function removeAllChildNodes(parent) {
                while (parent.firstChild) {
                    parent.removeChild(parent.firstChild);
                }
            }
            
         @*function loadtemplateSearchReportInstant() {
            var templateName = $("#pouptemplateName").val();
            var templateType = $("#pouptemplateType").val();
           // var templateStatus = $("#pouptemplateStatus").val();
            var ContentType = $("#poupContentType").val();

              $.ajax({
               url: "@Url.Action(MVC.Campaign.getcampaignSearchReport())",
                type: 'GET',
                  data: {
                      templateName:templateName,
                      templateType:templateType,
                      //templateStatus:templateStatus,
                      ContentType:ContentType
                  },
                  success: function (resp) {
                   rpt_datatable = $("#tbl_templateDetails").DataTable({
                       responsive: true,
                        deferRender: true,
                        "destroy": true,
                        data: resp.tdata,
                       columns: resp.thead,
                       autoWidth: false,
                       searching: false,

                        'columnDefs': [
                            {
                                "targets": [0,4,8,9,10,11],
                                "className": "text-center",
                                 "visible": false,
                                "searchable": false,

                            },
                            {
                                "targets": [1, 2, 3, 5, 6, 7],
                                "className": "text-center",
                            },
                            {
                               // { width: 200, targets: 0 },
                                "targets": 1,
                                "width": "50px",
                                "className": "text-center",
                                "mRender": function (data, type, full) {
                                    return '<span class="btn btn-link" id=btnEdit  style="color:blue;font-size:10px;">' + full[1] + '</span>'

                                }
                            },
                            {
                                // { width: 200, targets: 0 },
                                "targets": 2,
                                "width": "10%",
                                "className": "text-center",
                                "mRender": function (data, type, full) {
                                    return '<span style="text=align:center;"id="">' + full[2] + '</span><input class="wrapperDivHidden" id="tempid" type="hidden" value="' + full[0] + '" />'
                                   // return '<i class="btn btn-link" class="templateId" data-id=' + full[0]+'  style="color:blue;font-size:10px;">' + full[2] + '</i>'

                                }
                            },
                            {
                                "targets": 5, // SMS Part count
                                //"word-break": "break-all",
                                "className": "text-center",
                                "width": "42%"
                                //"mRender": function (data, type, full) {
                                //    return '<div  style=" display:table-cell;vertical-align:middle; overflow-x:auto !important;overflow-y:auto !important;">' + full[5] + '</div>';
                                //}

                            },
                            {
                                "targets": 7, // char count
                                "className": "hide-column",
                                //"sClass": "invisible",


                                    "mRender": function (data, type, full) {
                                        return '<span style="text=align:center;"id="">' + full[7] + '</span><input id="part_' + full[0] + '" type="hidden" value="' + full[11] + '" />';
                                    }
                                    //return ' <table style"height:1px;width:1px;"><tr><td><input id="part_' + full[0] + '" type="hidden" value="' + full[8] + '" />< input id = "variablecnt_' + full[0] + '" type = "hidden" value = "' + full[9] + '" /> < input id = "senderId_' + full[0] + '" type = "hidden" value = "' + full[10] + '" /> < input id = "unicode_' + full[0] + '" type = "hidden" value = "' + full[11] + '" /> </td>/tr></table>';

                            }                           
                       ],

                       order: [],
                        fnInitComplete: function (o) {
                            $("#loading").hide();
                            $("input[type=button]").removeAttr("disabled");
                        },
                    });
                }

            }).fail(function (xhr, status, error) {
                $("#loading").hide();
                $("input[type=button]").removeAttr("disabled");
                if (xhr.status == 401) {
                    alert("Click to continue", "Session Timedout", function () {
                        closing = false;
                        window.location = JSON.parse(xhr.responseText).LogOnUrl;
                    })
                }
                else if (xhr.status == 507) {
                    $("#divNoData span").text(" Result is too large.");
                    $("#divNoData").show();
                    $("input[type=button]").removeAttr("disabled");
                } else {
                    alert("Unable to fetch data from server", "Failed");

                }
            });
        }*@

        function constructNewRows(dvr, rawNumber) {

            var str = "";
            if ($('#ContentType').val() == "DYNAMIC" && rawNumber >= 10) {
                ErrorMsg("Exceeds the limit");

            }
            else if ($('#ContentType').val() == "STATIC" && rawNumber >= 10)
            {
                ErrorMsg("Exceeds the limit");

            }
            else
            {
                str = "";
                $("#numberOfRaw").val(parseInt($("#numberOfRaw").val()) + 1);
                str = '<tr class="cell-1">'
                    + '<td><span style="color:black " id="spn_mob"> _</span></td>'
                    + ' <td><i id="icon_alert" class="fa fa-exclamation-circle" style="margin-right:8px;color:red !important"></i><span id="spn_message">' + ReplaceSMSContentWithParameter($('#SmsContent').val(), dvr) + '</span></td>'
                    + '<td> <span id="spn_count">' + $("#smsCount").val() + ' /' + $("#smsLeg").val() + '</span></td>'
                    + '<td class="table-elipse">'
                    + ' <span class="fa fa-edit text-black-50" data-toggle="collapse" data-target="#demo' + rawNumber + '"></span>'
                    + ' <span class="fa fa-trash text-black-50" id="btn_remove"  style="margin-left:8px;color:red !important"></span>'
                    + '</td>'
                    + '</tr>'
                    + '<tr id="demo' + rawNumber + '" class="collapse">'
                    + '<td class="text-center" colspan="4">'

                    + '<div class="card" style="margin-top: -14px !important;margin-bottom:-10px;background: #aeb4bb;color: black;width:1015px;">'
                    + '<div class="card-body" style="width:1055px;">'

                    + '<div class="row" style="width:1000px;">'
                    + ' <div class="col-10" style="text-align:center;margin-bottom:4px;">  <span style="font-weight:bold;"> Mobile Number : </span><input id="mob" type="text"  onkeypress="return /[0-9]/i.test(event.key)" MaxLength="12" MinLength="8" value="" style="height:22px;max-width:150px;"></div>'

                    + '<div class= "col-2" style = "text-align:right;margin-left:-35px;" data-toggle="collapse" data-target="#demo' + rawNumber + '" >'
                    + '<button style="color: green !important;" data-toggle="collapse" data-target="#demo' + rawNumber + '" class="btn_hide"><i class="fa fa-save text-black-50" style = "color: green!important;"></i></button>'
                    + '</div>';

                    for (j = 0; j < dvr.length; j++) {
                        if (dvr.length >= 3) {
                            str = str
                                + '<div class="col-2" style="text-align:right;margin-bottom:4px;">'
                                + '<span > ' + dvr[j] + '</span></div><div class="col-2" style="text-align:left;margin-bottom:4px;"><input id="VAR' + (j + 1) + '" type="text" MaxLength="30" style="height:22px; max-width:150px;">'
                                + '</div>';
                        }
                        else if (dvr.length == 2) {
                            str = str
                                + '<div class="col-4" style="text-align:center;margin-bottom:4px;">'
                                + '<span> ' + dvr[j] + '</span><input id="VAR' + (j + 1) + '" type="text" MaxLength="30" style="height:22px; max-width:155px;">'
                                + '</div>';
                        }
                        else {
                            str = str
                                + '<div class="col-12" style="text-align:center;margin-bottom:4px;">'
                                + '<span> ' + dvr[j] + '</span><input id="VAR' + (j + 1) + '" type="text" MaxLength="30" style="height:22px; max-width:155px;">'
                                + '</div>';
                             }
                    }

                    str = str + '</div>'

                        + '</div>'
                        + '</div >'

                        + '</td>'
                        + '</tr>'
                    $("#tblEntAttributes tbody").append(str);
                 }
            return true;
        }

        function constructRows(numbers, dvr, smsConut) {

            var str = "";
            $("#tblEntAttributes").innerHTML = "";
            $("#numberOfRaw").val(numbers.length);
            $("#smsCount").val(smsConut.SmsLeg);
            $("#smsLeg").val(smsConut.SmsLength);

            var cnt = 0;
            for (i = 0; i < numbers.length; i++) {
                str = "";
                str = '<tr class="cell-1">'
                    + '<td><span id="spn_mob">' + numbers[i] + '</span></td>'
                    + ' <td>';
                if ($('#ContentType').val() == "DYNAMIC") {
                    str = str + '<i id="icon_alert" class="fa fa-exclamation-circle" style="margin-right:8px;color:red !important"></i>';
                }
                str = str + '<span id="spn_message">' + ReplaceSMSContentWithParameter($('#SmsContent').val(), dvr) + '</span></td>'
                    + '<td> <span id="spn_count">' + smsConut.SmsLeg + '/' + smsConut.SmsLength + '</span></td>'
                    + '<td class="table-elipse">'
                    + ' <span class="fa fa-edit text-black-50" data-toggle="collapse" data-target="#demo' + i + '"></span>'
                    + ' <span class="fa fa-trash text-black-50" id="btn_remove"  style="margin-left:8px;color:red !important"></span>'
                    + '</td>'
                    + '</tr>'
                    + '<tr id="demo' + i + '" class="collapse">'
                    + '<td class="text-center" colspan="4">'

                    + '<div class="card" style="margin-top: -14px !important;margin-bottom:-10px;background: #aeb4bb;color: black;width:1015px;">'
                    + '<div class="card-body" style="width:1055px;">'
                    + '<div class="row" style="width:1000px;">'
                    + ' <div class="col-10" style="text-align:center;margin-bottom:10px;">  <span style="font-weight:bold;"> Mobile Number : </span><input id="mob" type="text" onkeypress="return /[0-9]/i.test(event.key)"  MaxLength="12" MinLength="8" value="' + numbers[i] + '" style="height:22px;max-width:150px;"></div>'

                    + '<div class= "col-2" style = "text-align:right;margin-left:-35px;" data-toggle="collapse" data-target="#demo' + i + '" >'

                    + '<button style="color: green !important;background: seashell;" data-toggle="collapse" data-target="#demo' + i + '" class="btn_hide" aria-expanded="true">'
                    + ' <span class="fa fa-save text-black-50" style = "color: green!important;"></span>'
                    + '</button>'
                    + '</div>';


                for (j = 0; j < dvr.length; j++) {
                    if (dvr.length >= 3) {
                        str = str
                            + '<div class="col-2" style="text-align:center;margin-bottom:4px;">'
                            + '<span> ' + dvr[j] + '</span></div><div class="col-2" style="text-align:left;margin-bottom:4px;"><input id="VAR' + (j + 1) + '" type="text" MaxLength="30" style="height:22px; max-width:150px;">'
                            + '</div>';
                    }
                    else if (dvr.length == 2) {
                        str = str
                            + '<div class="col-4" style="text-align:center;margin-bottom:4px;">'
                            + '<span> ' + dvr[j] + '</span><input id="VAR' + (j + 1) + '" type="text" MaxLength="30" style="height:22px; max-width:155px;">'
                            + '</div>';
                    }
                    else {
                        str = str
                            + '<div class="col-12" style="text-align:center;margin-bottom:4px;">'
                            + '<span> ' + dvr[j] + '</span><input id="VAR' + (j + 1) + '" type="text" MaxLength="30" style="height:22px; max-width:155px;">'
                            + '</div>';
                    }
                }

                str = str + '</div>'
                    + '</div>'
                    + '</div>'
                    + '</td>'
                    + '</tr>'

                $("#tblEntAttributes tbody").append(str);
            }
            return true;
        }

        function getSmsCount(template) {
            var count = template.length / 160;
            var smsCount = "";
            if (count <= 1) {
                smsCount = template.length + '/1';
            }
            else {
                smsCount = (template.length - (count * 160)) + '/' + count;
            }
            return smsCount;
        }

        function ReplaceSMSContentWithParameter(template, dvr) {
            for (j = 0; j < dvr.length; j++) {
                template = template.replace('[VAR' + (j + 1) + ']', '[' + dvr[j]+']');
            }
            return template;
        }

        function IsDuplicateExists(items) {
            return items.some((val, i) => items.indexOf(val) !== i);
        }

        function getVariables() {
            var panel = $("#generated");
            $inputs = panel.find("input");
            var i = 0;
            var arr1 = [];
            $.each($inputs, function () {

                if ($(this).attr("id").indexOf("renameVariable") != -1) {
                    arr1[i] = $(this).val();
                    i++;
                }
            });
            return arr1;
        }

        function getVariablesWithName() {

            var additionalItems = new Array();
            var panel = $("#generated");
            $inputs = panel.find("input");
            var i = 0;
            $.each($inputs, function () {
                if ($(this).attr("id").indexOf("renameVariable") != -1) {
                    var addtioanlParameters = {};
                    addtioanlParameters.name = '[VAR'+(i+1)+']';
                    addtioanlParameters.value = $(this).val();
                    additionalItems.push(addtioanlParameters);
                    i++;
                }
            });
            return additionalItems;
        }

        function isCurrentRawIsValid($tds_c) {

            var isValid = true;
            $.each($tds_c, function () {
                $edtv = $(this).find("input");
                $.each($edtv, function () {
                    if ($(this).attr('id') == "mob" && ($(this).val() == '' || $(this).val() == null || $(this).val().length < 8)) {
                        isValid = false;
                        return false;
                    }
                });
            });

            return isValid;
        }

        function getSMSCountByTemplate(smsContent) {
            var instantSmsModel = {};
            instantSmsModel.sMSContent = smsContent;
            instantSmsModel.templateId = $("#TemplateId").val();
            instantSmsModel.unicodestatus = $("#unicodeStatus").val();

            return new Promise(function (resolve, reject) {
                $.ajax({
                    url: "@Url.Action(MVC.InstantSms.GetSmsCount())",
                    contentType: "application/json; charset=utf-8",
                    type: 'POST',
                    dataType: "json",
                    data: JSON.stringify(instantSmsModel),
                    success: function (resp) {
                        var json = $.parseJSON(resp);
                        resolve(json);
                    }
                }).fail(function (xhr, status, error) {
                    $("#loading").hide();
                    $("input[type=button]").removeAttr("disabled");
                    if (xhr.status == 401) {
                        alert("Click to continue", "Session Timedout", function () {
                            closing = false;
                            window.location = JSON.parse(xhr.responseText).LogOnUrl;
                        })
                    }
                    else if (xhr.status == 507) {
                        $("#divNoData span").text(" Result is too large.");
                        $("#divNoData").show();
                        $("input[type=button]").removeAttr("disabled");
                    }
                    else {
                        alert("Unable to fetch data from server", "Failed");

                    }
                });
                
            });
        }

       $("#dateFrom").flatpickr({
            //dateFormat: "d/m/Y",
            enableTime: false,
            mode:"range",
            dateFormat: "d/m/Y",
           maxDate: "today",
           locale: {
               rangeSeparator: ', '
           }


        });

        $('#btn_search').click(function () {

            if ($("#Idform").valid()) {
                reinitializeDataTable(tbl_report);
                loadReport();
            }

            else {
                ErrorMsg("Please choose Date Range")
            }

        });

        function reinitializeDataTable(table) {
            var $table = $(table);
            if ($.fn.dataTable.isDataTable(table)) {
                dt = $table.DataTable();
                dt.destroy();
            }
            $(table).empty();
            $table.hide();
        }


        function loadReport() {

            $("#loading").show();
            $("#divNoData").hide();
            $("input[type=button]").attr("disabled", "disabled");
            $.post("@Url.Action(MVC.InstantSms.Instantsmsreport())", $("form").serialize(), function (data) {
                if (jQuery.isEmptyObject(data)) {

                    $("#divNoData span").text(" No data available");
                    //$("#divNoData").show();
                    $("input[type=button]").removeAttr("disabled");
                    $("#loading").hide();
                    $("#divTable").hide();
                    ErrorMsg('No data available');
                }
                else {
                    data = JSON.parse(data); 
                    $("#tbl_report").show();
                    $("#divTable").show();
                    rpt_datatable = $("#tbl_report").DataTable({
                        responsive: true,
                        deferRender: true,
                        "destroy": true,
                        searching: false,
                        data: data,
                        columns: [
                            { "data": "MSISDN", "title": "MSISDN" },
                            { "data": "SENDER", "title": "SENDER" },
                            { "data": "MESSAGE ID", "title": "MESSAGE ID", },
                            { "data": "TEMPLATE ID", "title": "TEMPLATE ID" },
                            { "data": "SMS", "title": "SMS" },
                            { "data": "LENGTH", "title": "LENGTH" },
                            { "data": "SMS BILLABLE COUNT", "title": "SMS BILLABLE COUNT" },
                            { "data": "STATUS", "title": "STATUS" },
                            { "data": "FAILURE CODE", "title": "FAILURE CODE" }
                        ],
                        autoWidth: false,
                        dom: 'lfBrtip',
                        buttons: [
                            {
                                extend: 'excelHtml5',
                                title: "Campaign Report",
                            },
                            {
                                extend: 'csvHtml5',
                                title: "Campaign Report",
                            }

                        ],
                        'columnDefs': [
                            {
                                "defaultContent": "",
                                "targets": "_all",
                                "className":"text-center"
                            }, 
                            {
                              
                                "targets": 4,
                                "width":"50%",
                                "className": "text-center"
                            }, 
                        ],

                        order: [],
                        fnInitComplete: function (o) {
                            $("#loading").hide();
                            $("input[type=button]").removeAttr("disabled");

                        },

                    });
                }
                $("#loading").hide();
                $("input[type=button]").removeAttr("disabled");
            }).fail(function (xhr, status, error) {
                $("#loading").hide();
                $("input[type=button]").removeAttr("disabled");
                if (xhr.status == 401) {
                    alert("Click to continue", "Session Timedout", function () {
                        closing = false;
                        window.location = JSON.parse(xhr.responseText).LogOnUrl;
                    })
                }
                else if (xhr.status == 507) {
                    $("#divNoData span").text(" Result is too large.");
                    $("#divNoData").show();
                    $("input[type=button]").removeAttr("disabled");
                } else {
                    alert("Unable to fetch data from server", "Failed");

                }
            });
        }

        function resetfunction() {

            document.getElementById("Idform").reset();
            $('#StaticSmsDiv').hide();
            $('#dynamicSmsDiv').hide();
            document.getElementById("bindsenderName").innerHTML = "";
            $('#sendbutton').hide();
            $("#smstemplatediv").hide();
            document.getElementById("bindtemplatename").innerHTML = "";
            $('#tbl_report').parents('div.dataTables_wrapper').first().hide();
            $("#divTable").hide();
            $("#collapseTestSms").removeClass("show");
            $('#testsmsdiv').hide();
            $("input[id=btnShow]").removeAttr("disabled");
            $('#div_inpunumber').hide();
            $('#div_table').hide();
            $('#sendbutton').hide();
            $("#tblEntAttributes tbody").html("");
           
        }

        function loadtemplateSearchReportInstant() {
            var templateName = $("#pouptemplateName").val();
            var templateType = $("#pouptemplateType").val();
           // var templateStatus = $("#pouptemplateStatus").val();
            var ContentType = $("#poupContentType").val();

              $.ajax({
               url: "@Url.Action(MVC.Campaign.getcampaignSearchReport())",
                type: 'GET',
                  data: {
                      templateName:templateName,
                      templateType:templateType,
                      //templateStatus:templateStatus,
                      ContentType:ContentType
                  },
                  success: function (data) {
                      data = JSON.parse(data); 

                   rpt_datatable = $("#tbl_templateDetails").DataTable({
                       responsive: true,
                        deferRender: true,
                        "destroy": true,
                        data: data,
                       columns: [
                           { "data": "Tm_id", "title": "Tm_id" },
                           {
                               "data": "SENDER", "title": "SENDER",
                               render: function (data, type, row, meta) {

                                   id = row["Tm_id"];
                                   id1 = row["SENDER"];
                                   return '<span class="btn btn-link" id=btnEdit  style="color:blue;font-size:10px;">' + id1 + '</span><input class="wrapperDivHidden" id="tempid" type="hidden" value="' + id + '" />'
                               }
                           },
                           { "data": "NAME", "title": "NAME" },
                           { "data": "TYPE", "title": "TYPE" },
                           { "data": "STATUS", "title": "STATUS", },
                           { "data": "MESSAGE", "title": "MESSAGE" },
                           { "data": "TEMPLATE TYPE", "title": "TEMPLATE TYPE" },
                           {
                               "data": "LENGTH", "title": "LENGTH",
                               render: function (data, type, row, meta) {
                                   id = row["Tm_id"];
                                   id7 = row["LENGTH"];
                                   id11 = row["val"];
                                   return '<span style="text=align:center;"id="">' + id7 + '</span><input id="part_' + id + '" type="hidden" value="' + id11 + '" />';
                               }
                           },
                           { "data": "1", "title": "1" },
                           { "data": "2T", "title": "2T" },
                           { "data": "Sender_id", "title": "Sender_id" },
                           { "data": "val", "title": "val" }
                       ],
                       autoWidth: false,
                       searching: false,

                        'columnDefs': [
                            {
                                "targets": [0,4,8,9,10,11],
                                "className": "text-center",
                                 "visible": false,
                                "searchable": false
                            },
                            {
                                "targets": [1, 2, 3, 5, 6, 7],
                                "className": "text-center"
                            },
                            {
                                "targets": 1,
                                "width": "50px",
                                "className": "text-center"
                            },
                            //{
                            //    "targets": 2,
                            //    "width": "10%",
                            //    "className": "text-center",
                            //    "mRender": function (data, type, full) {
                            //        return '<span style="text=align:center;"id="">' + full[2] + '</span><input class="wrapperDivHidden" id="tempid" type="hidden" value="' + full[0] + '" />'
                            //       // return '<i class="btn btn-link" class="templateId" data-id=' + full[0]+'  style="color:blue;font-size:10px;">' + full[2] + '</i>'

                            //    }
                            //},
                            {
                                "targets": 5, 
                                "className": "text-center",
                                "width": "42%"

                            },
                            {
                                "targets": 7, // char count
                                "className": "hide-column"
                            }                           
                       ],

                       order: [],
                        fnInitComplete: function (o) {
                            $("#loading").hide();
                            $("input[type=button]").removeAttr("disabled");
                        },
                    });
                }

            }).fail(function (xhr, status, error) {
                $("#loading").hide();
                $("input[type=button]").removeAttr("disabled");
                if (xhr.status == 401) {
                    alert("Click to continue", "Session Timedout", function () {
                        closing = false;
                        window.location = JSON.parse(xhr.responseText).LogOnUrl;
                    })
                }
                else if (xhr.status == 507) {
                    $("#divNoData span").text(" Result is too large.");
                    $("#divNoData").show();
                    $("input[type=button]").removeAttr("disabled");
                } else {
                    alert("Unable to fetch data from server", "Failed");

                }
            });
        }

    </script>

}


