@model IBS.Mvc4.Models.IncidentModel
@{
    ViewBag.ActLink = ViewBag.Title = "Incidents";
    //Layout = null;
}

@if (Session["RoleID"].ToString() == "1")
{   
    <link href="~/Content/animate.css" rel="stylesheet" />   
    <div class="row">
        <div class="col s12">
            <div class="card animated slideInLeft">
                <div class="card-content">
                    @using (Html.BeginForm(MVC.Incident.Incidents(), FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <div class="row" style="display:none">
                            <div class="input-field col s2">
                                @Html.LabelFor(m => m.IncidentId, new { @class = "active" })
                                @Html.TextBoxFor(m => m.IncidentId, new { @class = "iyellow numeric", type = "text" });
                                @*@Html.ValidationMessageFor(m => m.IncidentId, "", new { @class = "text - danger" })*@
                            </div>
                            <div class="input-field col s2">
                                @Html.LabelFor(m => m.AlertId, new { @class = "active" })
                                @Html.TextBoxFor(m => m.AlertId, new { @class = "iyellow numeric", type = "text" });
                            </div>
                            <div class="input-field col s2">
                                @Html.LabelFor(m => m.SystemId, new { @class = "active" })
                                @Html.TextBoxFor(m => m.SystemId, new { @class = "iyellow numeric", type = "text" });
                            </div>
                        </div>
                        <div class="row">
                            <div class="input-field col s3">
                                @Html.LabelFor(m => m.SelectedSeverity, new { @class = "active" })
                                @Html.DropDownListFor(m => m.SelectedSeverity, Model.SeverityList, new { @class = "browser-default iyellow" })
                            </div>
                            <div class="input-field col s3">
                                @Html.LabelFor(m => m.Owner, new { @class = "active" })
                                @Html.DropDownListFor(m => m.Owner, Model.OwnerList, new { @class = "browser-default iyellow" })
                            </div>
                            <div class="input-field col s3">
                                @Html.LabelFor(m => m.Location, new { @class = "active" })
                                @Html.DropDownListFor(m => m.Location, Model.LocationList, new { @class = "browser-default iyellow" })
                            </div>
                            <div class="input-field col s3">
                                @Html.LabelFor(m => m.Staus, new { @class = "active" })
                                @Html.DropDownListFor(m => m.Staus, Model.StatusList, new { @class = "browser-default iyellow" })
                            </div>
                        </div>
                        <div class="row">                           
                            <div class="input-field col s3">
                                @Html.LabelFor(m => m.InsRaisedBy, new { @class = "active" })
                                @Html.DropDownListFor(m => m.InsRaisedBy, Model.InsRaisedByList, new { @class = "browser-default iyellow" })
                            </div>
                            <div class="input-field col s3">
                                @Html.LabelFor(m => m.CustomerImpacted, new { @class = "active" })
                                @Html.DropDownListFor(m => m.CustomerImpacted, (MultiSelectList)Model.CustomerImpactedList, new
                           {
                               @id = "DaySelect",
                               multiple = "multiple", @*@class = "js-select2",*@ @style = "width:100%; font-size:5px",
                               placeholder = "sda"
                           })
                            </div>                        
                            <div class="input-field col s3">
                                @Html.LabelFor(m => m.IncidentTime, new { @class = "control-label" })
                                @Html.TextBoxFor(m => m.IncidentTime, new { @class = "iyellow highlighted", data_max_date = DateTime.Today.ToString("yyyy-MM-dd H-i") })
                            </div>
                            <div class="input-field col s3">
                                @Html.LabelFor(m => m.ResolutionTime)
                                @Html.TextBoxFor(m => m.ResolutionTime, new { @class = "iyellow highlighted", data_max_date = DateTime.Today.ToString("yyyy-MM-dd H-i") })
                            </div>
                        </div>
                        <div class="row">
                            <div class="input-field col s3">
                                @Html.LabelFor(m => m.Problem)
                                @Html.TextBoxFor(m => m.Problem, new { @class = "iyellow numeric", type = "text" })
                            </div>
                            <div class="input-field col s3">
                                @Html.LabelFor(m => m.Pending)
                                @Html.TextBoxFor(m => m.Pending, new { @class = "iyellow numeric", type = "text" })
                            </div>                       
                            <div class="input-field col s3">
                                @Html.LabelFor(m => m.Resolution, new { @class = "active" })
                                @Html.TextBoxFor(m => m.Resolution, new { @class = "iyellow numeric", type = "text" })
                            </div>
                            <div class="input-field col s3">
                                @Html.LabelFor(m => m.IncMailIds, new { @class = "active" })
                                @Html.TextBoxFor(m => m.IncMailIds, new { @class = "iyellow numeric", type = "text" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="input-field col s3">
                                @Html.LabelFor(m => m.ImpactDes, new { @class = "active" })
                                @Html.TextBoxFor(m => m.ImpactDes, new { @class = "iyellow numeric", type = "text" })
                            </div>
                            <div class="input-field col s3">
                                @Html.LabelFor(m => m.Cause, new { @class = "active" })
                                @Html.TextBoxFor(m => m.Cause, new { @class = "iyellow numeric", type = "text" })
                            </div>
                       
                            <div class="input-field col s6">
                                    @Html.LabelFor(m => m.Action, new { @class = "active" })
                                    @Html.TextBoxFor(m => m.Action, new { @class = "iyellow numeric", type = "text" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col s6 file-field input-field">
                                    <div class="btn green">
                                        <span>File</span>
                                        <input type="file" name="fileUpload" @*accept=".jpg,.jpeg,.pdf,.doc,.docx,.zip"*@>
                                    </div>
                                    <div class="file-path-wrapper">
                                        <input class="file-path validate" type="text" placeholder="attatch files(jpg,pdf,doc,docx,zip); Size < 5MB">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="footer left">
                                    <br />
                                    <br />
                                    <button id="btn_show" class="orange btn btn-ion not-close" type="submit" name="action">
                                        Submit
                                    </button>
                                </div>
                            </div>

                    }
                </div>
            </div>
        </div>
    </div>
}
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/select2.min.js"></script>
@section scripts {
    <script>

        $(document).ready(function () {
            $("#DaySelect").material_select();            
            $("#IncidentTime").flatpickr({ enableTime: true });
            $("#ResolutionTime").flatpickr({ enableTime: true });
            if ('@ViewBag.Status' == "1"){
             toastr.options = {
                 "closeButton": false,
                 "debug": false,
                 "newestOnTop": false,
                 "progressBar": true,
                 "positionClass": "toast-bottom-full-width",
                 "preventDuplicates": false,
                 "onclick": null,
                 "showDuration": "300",
                 "hideDuration": "1000",
                 "timeOut": "5000",
                 "extendedTimeOut": "1000",
                 "showEasing": "swing",
                 "hideEasing": "linear",
                 "showMethod": "fadeIn",
                 "hideMethod": "fadeOut"
            };
             if ('@ViewBag.Success' =="Added") {
                 toastr.success('Succesfully Created...');
             }
             else if ('@ViewBag.Update' == "Updated") {
                 toastr.success('Succesfully Updated...');
             }
             else
             {
                 toastr.error('Some error occured while Creating');
             }
    }
        });
    </script>
}
