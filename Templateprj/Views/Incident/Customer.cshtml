@model IBS.Mvc4.Models.CusModel
@{
    ViewBag.ActLink = ViewBag.Title = "Customer";
    System.Data.DataTable cus = ViewBag.Data;
}
@if (Session["RoleID"].ToString() == "1")
{
    <div class="row">
        <div class="col s6">
            <div class="card animated slideInLeft">
                <div class="nav box">
                    <h5 class="card-title">Create Customer</h5>
                </div>
                <div class="card-content">
                    @using (Html.BeginForm(MVC.Incident.Customer(), FormMethod.Post))
                {
                        <div class="row">
                            <div class="input-field col s12">
                                @Html.LabelFor(m => m.Location, new { @class = "active" })
                                @Html.DropDownListFor(m => m.Location, Model.LocationList, new { @class = "browser-default iyellow" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="input-field col s12">
                                @Html.LabelFor(m => m.CusName, new { @class = "active" })
                                @Html.TextBoxFor(m => m.CusName, new { @class = "iyellow numeric", type = "text" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="input-field col s12">
                                @Html.LabelFor(m => m.Tfn, new { @class = "active" })
                                @Html.TextBoxFor(m => m.Tfn, new { @class = "iyellow numeric", @onkeypress = "return (event.charCode >= 48 && event.charCode <= 57|| event.which == 8)" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="input-field col s12">
                                @Html.LabelFor(m => m.Rdn, new { @class = "active" })
                                @Html.TextBoxFor(m => m.Rdn, new { @class = "iyellow numeric", @onkeypress = "return ((event.charCode >= 48 && event.charCode <= 57) || event.charCode == 44 || event.which == 8)" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="footer left">
                                <br />
                                <br />
                                <button id="btn_show" class="orange btn btn-ion not-close" type="submit" name="action">
                                    Submit
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col s6">
            <div class="card animated slideInRight">
                <div class="nav box">
                    <h5 class="card-title">Create Owner</h5>
                </div>
                <div class="card-content">
                    @using (Html.BeginForm(MVC.Incident.Owner(), FormMethod.Post))
                {
                        <div class="row">
                            <div class="input-field col s12">
                                @Html.LabelFor(m => m.OwnerName, new { @class = "active" })
                                @Html.TextBoxFor(m => m.OwnerName, new { @class = "iyellow numeric" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="footer left">
                                <br />
                                <br />
                                <button id="btn_shows" class="orange btn btn-ion not-close" type="submit" name="action">
                                    Submit
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

<style>
    .card-body {
        position: relative;
        margin: 0.5rem 0 1rem 0;
        background-color: #ffd800;
        transition: box-shadow .25s;
        border-radius: 2px;
    }

    .nav {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        padding-left: 0;
        margin-bottom: 0;
        list-style: none;
        transition: box-shadow 1s;
        background-color: #ffd800;
    }

    .box {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        padding-left: 0;
        margin-bottom: 0;
        list-style: none;
        transition: box-shadow 1s;
        background-color: #ffd800;
        border-radius: 5px;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
        border-radius: 5px;
        -webkit-transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
        transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
    }

        .box::after {
            content: "";
            border-radius: 5px;
            position: absolute;
            z-index: -1;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            opacity: 0;
            -webkit-transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
            transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
        }

        .box:hover {
            -webkit-transform: scale(1, 1);
            transform: scale(1, 1);
        }

            .box:hover::after {
                opacity: 1;
            }
</style>
@*<script src="http://code.jquery.com/jquery.js" type="text/javascript"></script>*@
@section scripts {
    <script>
    $(document).ready(function ()
    {
        if ('@ViewBag.Status' == "1") {
            toastr.options = {
                "closeButton": false,
                "debug": false,
                "newestOnTop": false,
                "progressBar": true,
                "positionClass": "toast-bottom-full-width",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };
            if ('@ViewBag.Success' != "") {
                toastr.success('Succesfully Created.');
            }
            else { toastr.error('Some error occured while Creating'); }
        }
        if ('@ViewBag.OwnerSuccess' != "")
        {
            toastr.options = {
                "closeButton": false,
                "debug": false,
                "newestOnTop": false,
                "progressBar": true,
                "positionClass": "toast-bottom-full-width",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };
            toastr.success('Succesfully Created.');
        }
        else if ('@ViewBag.OwnerError' != "")
        {
            toastr.options = {
                "closeButton": false,
                "debug": false,
                "newestOnTop": false,
                "progressBar": false,
                "positionClass": "toast-bottom-full-width",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };
            toastr.error('Some error occured while Creating');
        }

    });
    </script>
}
