@model Templateprj.Models.SMSCampaignModel
@{
    System.Data.DataTable project = ViewBag.inboundData;

    ViewBag.Title = "BUlk SMS";
}

<style>

    table.dataTable thead > tr > td.sorting, table.dataTable thead > tr > td.sorting_asc, table.dataTable thead > tr > td.sorting_desc, table.dataTable thead > tr > th.sorting, table.dataTable thead > tr > th.sorting_asc, table.dataTable thead > tr > th.sorting_desc {
        font-size: 9.5pt;
        text-align: center;
        font-weight: bold;
        white-space: nowrap !important;
        table-layout: fixed;
        color: #5f004b;
    }
    #spinner-div {
        position: fixed;
        display: none;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        text-align: center;
        background-color: rgba(255, 255, 255, 0.8);
        z-index: 2;
    }

    textarea {
        resize: none;
    }

    .alert-danger {
        color: white;
    }
   
    .alert-success {
        color: white;
    }
    #ajaxSpinnerImage {
        display: none;
    }
    hr {
        border: 1px solid #5f004b
    }
    .modal1 {
        position: fixed;
        z-index: 999;
        height: 100%;
        width: 100%;
        top: 0;
        left: 0;
        background-color: Black;
        filter: alpha(opacity=60);
        opacity: 0.6;
        -moz-opacity: 0.8;
    }

    .center {
        z-index: 1000;
        margin: 10px auto;
        padding: 10px;
        width: 105px;
        background-color: White;
        border-radius: 10px;
        filter: alpha(opacity=100);
        opacity: 1;
        -moz-opacity: 1;
    }

        .center img {
            height: 100px;
            width: 100px;
        }
    .box {
        /*border: 1px solid #878080;*/
        padding: 20px;
        box-shadow: rgba(0, 0, 0, 0.35) 1px 5px 10px;
        /*min-height: 150px;*/
        /*width:25%;*/
    }

    .blue {
        width: 60%;
        background-color: #57b4eb;
    }

    .yellow {
        width: 30%;
        background-color: yellow;
    }

    .red {
        width: 10%;
        background-color: red;
    }

    .head {
        position: sticky;
        top: 0;
        z-index: 5;
    }

    body {
        font-size: 13px !important;
    }

    .form-control {
        height: 20px !important;
        padding: 0px 5px !important;
        font-size: 12px !important;
        background-color: white !important;
        /*color:#5f004b;*/
    }
    .form-control1 {
        margin-top: 4px;
    }
    .form-controlnew {
        height: 20px !important;
        padding: 0px 5px !important;
        font-size: 12px !important;
    
    }
    .form-group {
        margin-bottom: 4px;
    }
    .text {
        overflow-wrap: break-word;
      
    }
    /*.card {
        width: 420px;
        height: 100px;
        border-top-right-radius: 10px;
        border-top-left-radius: 10px;
        border-bottom-left-radius: 10px;
        border-bottom-right-radius: 10px;
        background: #ded0da;
    }*/

    .navstyle {
        border: 0px solid black;
    }

        .navstyle > ul > li {
            border: 1px solid black;
            background-color: #5f004b;
            margin-left: 5px;
            border-top-right-radius: 10px;
            border-top-left-radius: 10px;
            width: 200px;
        }

    a {
        color: white;
    }

        a:hover {
            color: white;
        }

    .active {
        background-color: white;
        color: black;
    }

        .active:hover {
            background-color: white;
            color: black;
        }

    .nav-link {
        border-top-right-radius: 10px;
        border-top-left-radius: 10px;
    }

    label {
        color: #5f004b;
        font-size: 12px;
    }

    .navclr:hover {
        background-color: #ebecf1;
    }
    input:read-only {
        background-color: transparent;
    }
    .navclr {
        background-color: #ebecf1;
    }
    /*.dropdown-toggle {
        float: right;
    }*/
    .cl-black {
        color: #495057 !important;
    }

    .text-danger {
        width: 109px;
        font-size: 10px;
        height: 0px;
    }

    labelvariable {
        color: #5f004b;
        font-size: 12px;
    }
</style>

<div class="row" style="margin-top:50px">


    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", id = "Idform" }))
    {
       
        @Html.AntiForgeryToken()
        <div class="container" style="margin-left:10px">
            <div class="row">
                <div class="wizard-navigation">
                    <div class="col-xs-12 navstyle">
                        <ul class="nav">
                            <li class="nav-item" style="width: 100px;height:35px">
                                <a style="font-size:9.2846px" id="campaigncreationnavitem" onclick="return resetfunction()" class="nav-link active" href="#campaignnav" data-toggle="tab" role="tab" aria-controls="about" aria-selected="true">
                                    <i class="now-ui-icons loader_gear sidebar-mini-icon mt-1"></i>
                                    CAMPAIGN
                                </a>
                            </li>
                            <li class="nav-item" style="width: 118px;height:35px">
                                <a style="font-size:9.2846px" id="campaignlistnavitem" class="nav-link" href="#campaignlistnav" onclick="return resetfunction()" data-toggle="tab" role="tab" aria-controls="account" aria-selected="false">
                                    <i class="now-ui-icons loader_gear sidebar-mini-icon mt-1"></i>
                                    CAMPAIGN LIST
                                </a>
                            </li>
                            <li class="nav-item " style="width: 111px;height:35px">
                                <a style="font-size:9.2846px" id="uploadlistnavitem" class="nav-link" href="#uploadbasenav" onclick="return resetfunctionUpload()" data-toggle="tab" role="tab" aria-controls="account" aria-selected="false">
                                    <i class="now-ui-icons loader_gear sidebar-mini-icon mt-1"></i>
                                    UPLOAD BASE
                                </a>
                            </li>
                            <li class="nav-item arrow" style="width: 131px;height:35px">
                                <a style="font-size:9.2846px" id="campaignstatusnavitem" class="nav-link" href="#campaignstatusnav" onclick="return resetfunction()" data-toggle="tab" role="tab" aria-controls="address" aria-selected="false">
                                    <i class="now-ui-icons loader_gear sidebar-mini-icon mt-1"></i>
                                    CAMPAIGN STATUS
                                </a>
                            </li>
                            <li class="nav-item" style="width:133px;height:35px">
                                <a style="font-size:9.2846px" id="campaignreportsnavitem" class="nav-link" href="#campaignreportsnav" onclick="return resetfunction()" data-toggle="tab" role="tab" aria-controls="about" aria-selected="false">
                                    <i class="now-ui-icons loader_gear sidebar-mini-icon mt-1"></i>
                                    CAMPAIGN REPORTS
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="tab-content">
            <div class="tab-pane show active navclr" id="campaignnav">
                <div style="margin-top:5px;background:#ebecf1" class="col-md-12">
                    <p>
                        <a class="btn btn-block text-white dropdown-toggle" style="width:1000px;height:25px;text-align:left;background-color:#5f004b;font-size:9.2846px;vertical-align:middle;"
                           data-toggle="collapse" href="#collapseCreateCampaign" role="button" aria-expanded="false">
                            CREATE  NEW CAMPAIGN
                        </a>
                    </p>
                    <div class="collapse  ml-5" id="collapseCreateCampaign" style="width: 88%;">


                        <div class="container">
                            <div class="row justify-content-center">
                                <div class="col-md-6">
                                    <div class="row">
                                        @Html.HiddenFor(m => m.campaignId)
                                        @Html.HiddenFor(m => m.unicodeStatus, new { Value = "-1" })
                                        <div class="col-md-2">
                                            @Html.Label("Name")<span style="color:red;">*</span>

                                        </div>
                                        <div class="form-group col-md-4">
                                            @Html.TextBoxFor(m => m.campaignName, new { @class = " form-control", @onkeypress = "return (event.which!==32)", style = "background:white", required = "required", placeholder = "-Campaign Name-", MaxLength = "15", autocomplete = "off" })
                                        </div>

                                        @*<div class="col-md-2">
                                                @Html.Label(" Type*")

                                            </div>
                                            <div class="form-group col-md-4">
                                                <div class="form-group" style="width:100px">
                                                    @Html.DropDownListFor(m => m.campaignType, Model.campaignTypeList, new { @class = "form-control cl-black", @style = "width:117px", @required = "required" })

                                                </div>
                                            </div>*@

                                    </div>

                                    <div class="row">
                                        <div class="col-md-4">
                                            @Html.Label("Date Window")<span style="color:red;">*</span>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.TextBoxFor(m => m.fromDate, new { @class = " form-control mask-date", style = "background:white", required = "required", placeholder = "-From Date-", @readonly = "@readonly" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.TextBoxFor(m => m.toDate, new { @class = " form-control mask-date", style = "background:white", required = "required", placeholder = "-To Date-", @readonly = "@readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4">
                                            @Html.Label("Time Window")<span style="color:red;">*</span>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.TextBoxFor(m => m.fromTime, new { @class = " form-control", style = "background:white", required = "required", placeholder = "-From Time-", @readonly = "@readonly" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(m => m.toTime, new { @class = " form-control", style = "background:white", required = "required", placeholder = "-To Time-", @readonly = "@readonly" })
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md" id="timealertdiv" style="display:none;">
                                            <span style="color:red;font-size:12px;"> Promotional SMS time span is between 9 AM to 9 PM.</span>
                                        </div>
                                    </div>
                                    <div class="row" style="margin-top:10px;">
                                        <div class="col-md-3">
                                            @Html.Label("SMS Type")<span style="color:red;">*</span>
                                        </div>
                                        <div class="col-md-5">
                                            <div class="form-group">
                                                @Html.DropDownListFor(m => m.smsType, Model.smsTypeList, new { @class = "form-control cl-black", @required = "required" })

                                            </div>
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="row" style="margin-top:10px;">
                                            <div class="col-md" id="templateiddiv">
                                                @Html.Label("Template", new { style = "margin-left:15px;" })<span style="color:red;">*</span>
                                                <input id="btnShow" value="Select Template" style="color:white; background-color:#5f004b;border:none;border-radius:10px;" type="button" />
                                            </div>

                                        </div>
                                    </div>
                                    <div id="smstemplatediv">
                                        <div class="row">
                                            @Html.Label("Sender:", new { style = "margin-left:15px;" })

                                            @Html.TextAreaFor(m => m.senderId, new { @class = " form-control", required = "required", @style = "display:none;width:80px; height: auto !important;background:white;", @readonly = "readonly", @rows = "1" })
                                            <div class="col-md" style="">
                                                <span id="bindsenderName"></span>
                                            </div>

                                            @Html.Label("Content Type:", new { style = "margin-left:15px;" })

                                            <div class="col-md" style="">
                                                @*<span id="bindtemplatetype"></span>*@
                                                @Html.TextAreaFor(m => m.templateTypeName, new { @class = "form-control nonedit", required = "required", @style = "width:80px;border: none;outline: none;color:black;height: auto !important; ", @readonly = "readonly", @rows = "1" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            @Html.Label("Template Name:", new { style = "margin-left:15px;" })
                                            <div class="col-md" style="">
                                                @*<span id="bindtemplatetype"></span>*@
                                                <span id="bindtemplatename"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="ml-3 mr-2" style="border:1px solid #5f004b ;"></div>
                                <div class="col-md-5">


                                    <div id="StaticSmsDiv">
                                        <div class="row">
                                            <div class="col-md-12 offset-5" style="color:#5f004b"> SMS Count: <span id="smscount"></span> (<span id="smscount" style="color:red;">*</span>W/o variables)</div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-md-12">
                                                @Html.TextAreaFor(m => m.smsContent, new { @class = "form-control", required = "required", @style = "height: auto !important;background:white;", @readonly = "readonly", @rows = "5" })
                                                @Html.TextAreaFor(m => m.templateId, new { @class = "form-control", required = "required", @style = "display:none; height: auto !important;background:white;", @readonly = "readonly", @rows = "2" })
                                                @*<textarea class="form-control" style="height: auto !important;" id="" rows="3"></textarea>*@
                                            </div>
                                        </div>
                                    </div>

                                    <div id="dynamicSmsDiv">
                                        <div class="row">
                                            <div class="col-md  mb-1 mt-1" style="color:#5f004b"><b><u>Define Parameters</u></b><span style="color:red;">[Minimum 3 characters required]</span></div>
                                        </div>
                                        <div class="row">

                                            <div class="col-md-6" style="color:#5f004b">
                                                From Message Script
                                            </div>
                                            <div class="col-md-6" style="color:#5f004b">
                                                Rename Variable
                                            </div>
                                            <div class="col-md-12 mb-1" id="generated" MaxLength="12" MinLength="3">

                                                @*@Html.TextBoxFor(m => m.SMSvariable[0].variableName, new { @class = " form-control", required = "required" })
                                                    @Html.TextBoxFor(m => m.SMSvariable[0].renameVariable, new { @class = " form-control", required = "required"})*@

                                            </div>

                                        </div>
                                    </div>
                                    @*<div id="fileUploadm2m">
                                            <div class="d-flex">
                                                <span class="mt-3">@Html.Label("Upload Base", new { style = "width:75px" }) </span>

                                                <div style="margin-left:20px">

                                                    <input style="width:234px;font-size:13px;color:#5f004b;" type="file" name="file" required="required" class="btn">

                                                </div>
                                                <div class="mr-3 mt-4 col-6">
                                                    <i class="now-ui-icons files_single-copy-04"></i>
                                                    <span style="color:#5f004b;font-size:13px"><i> <a style="color:#5f004b;" href="Campaign/DownloadsampleFile?id=1">Sample File</a></i></span>
                                                </div>

                                            </div>
                                        </div>*@


                                    <div class="row">
                                        <div class="col-md-3" id="savecampaignM2M">
                                            <button style="margin-left:200px;color:white; background-color:#5f004b;border-radius:20px;" type="button" id="SaveCampaign">Save Campaign</button>

                                        </div>
                                        <div class="col-md-12">
                                            @*<button class="btn-success mt-1" style="margin-left:250px" type="reset" id="configreset" value="Reset">Reset</button>*@
                                            <button type="button" style="margin-left:370px;color:white; background-color:#5f004b;border-radius:20px;" id="campaignsubmit">Test</button>
                                        </div>
                                    </div>


                                </div>
                            </div>
                        </div>
                        <hr/>



                    </div>



                </div>




                <div id="testsmsdiv" style="display:none">
                    <div style="margin-top:0px;background:#ebecf1" class="col-md-12">
                        <p>
                            <a class="btn btn-block text-white dropdown-toggle" style="width:1000px;height:25px;text-align:left;background-color:#5f004b;font-size:9.2846px"
                               data-toggle="collapse" href="#collapseTestSms" role="button" aria-expanded="false">
                                TEST SMS
                            </a>
                        </p>
                        <div class="collapse  ml-5" id="collapseTestSms" style="width: 88%;">

                            <div class="row col-md-9 ml-3" id="SMSTestingCompleteDiv">
                                <div class="col-md-6">

                                    <div class="form-group">

                                        @Html.Label("Test Numbers", new { style = "font-weight:bold;font-size:12px" })<span style="color:red;">*[country code mandatory]</span>

                                    </div>

                                    <div class="form-group" id="variablesnameid">
                                        <label style="font-size:12px;"><b><u>Variables</u></b></label>

                                    </div>

                                    <div id="generatelabel" class="mt-2">


                                    </div>



                                </div>

                                <div class="col-md-3">

                                    @Html.TextBoxFor(m => m.SMSTest[0].mobileNumber, new { @class = " form-control NumFld", required = "required", MaxLength = "12", MinLength = "8" })
                                    @Html.ValidationMessageFor(m => m.SMSTest[0].mobileNumber)

                                    <div class="form-group mt-5">
                                        <div id="messageto1stnumber">

                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-3">

                                    @Html.TextBoxFor(m => m.SMSTest[1].mobileNumber, new { @class = " form-control NumFld", required = "required", MaxLength = "12", MinLength = "8" })
                                    @Html.ValidationMessageFor(m => m.SMSTest[1].mobileNumber)
                                    <div class="form-group mt-5">
                                        <div id="messageto2ndnumber">

                                        </div>
                                    </div>


                                </div>

                                <div class="row">

                                    <div class="col-12 mt-2">
                                        <button type="button" style="margin-left:700px;color:white; background-color:#5f004b;border-radius:20px;" id="createsms">Create</button>

                                    </div>

                                </div>
                                <div class="row" id="messageScriptdiv">
                                    <div id="messagescriptlabeldiv" class="form-group">
                                        @Html.Label("Message Script", new { style = "font-weight:bold;margin-left:27px" })

                                    </div>
                                    <div class="row">
                                        <div class="form-group mt-3" style="margin-left:147px"> SMS Count: <span id="smscountmessage1"></span></div>

                                        <div class="form-group mt-3" style="margin-left:127px"> SMS Count: <span id="smscountmessage2"></span></div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-4">
                                            @*@Html.TextAreaFor(m => m.SMSTest[0].message, new { @class = "form-control", @style = "height: auto !important;background:white;width:207px;margin-left:146px;", @readonly = "@readonly", @rows = "5" })*@
                                            @Html.TextAreaFor(m => m.SMSTest[0].message, new { @class = "form-control", @readonly = "@readonly", @style = "height: auto !important;background:white;width:211px;margin-left:145px;aria - invalid = false", @rows = "5" })

                                        </div>
                                        <div class="col-md-4">

                                        </div>
                                    </div>



                                    <div class="row">
                                        <div class="col-md-4">
                                            @Html.TextAreaFor(m => m.SMSTest[1].message, new { @class = "form-control", @readonly = "@readonly", @style = "height: auto !important;background:white;width:211px;margin-left:45px", @rows = "5" })

                                        </div>
                                    </div>

                                </div>
                            </div>

                            <div class="row col-md-12">
                                <div class="col-md-2 mt-2" id="sendsmsdiv" style="display:none">
                                    <button type="button" style="margin-left:660px;color:white; background-color:#5f004b;border-radius:20px;" id="SendSms">Send</button>
                                </div>
                                <div class="col-md-4 mt-2" id="CampaignCreationButtondiv" style="display:none">
                                    <button type="button" style="margin-left:650px;color:white; background-color:#5f004b;border-radius:20px;" id="SaveCampaignnew">Save Campaign</button>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>
            </div>

            <div class="tab-pane navclr" style="background:#ebecf1" id="campaignlistnav">

                <div class="row ml-3 mt-4" style="width:900px;">

                    <div>
                        @Html.Label("Campaign Name")
                        <div class="form-group">
                            @Html.DropDownListFor(m => m.listcampaignName, Model.listcampaignNameList, new { @class = "form-control cl-black" })

                        </div>
                    </div>
                    <div class="col-md-2">
                        @Html.Label("Created Date")
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.listCreatedDate, new { @class = " form-control", style = "background:white", placeholder = "-Date-", @readonly = "@readonly" })

                        </div>
                    </div>
                    <div class="col-md-2">
                        @Html.Label("Status")
                        <div class="form-group">
                            @Html.DropDownListFor(m => m.listCampaignStatus, Model.listCampaignStatusList, new { @class = "form-control cl-black" })

                        </div>
                    </div>
                    <div class="col-md-2" style="display:none;">
                        @Html.Label("Priority")
                        <div class="form-group">
                            @Html.DropDownListFor(m => m.listCampaignPriority, Model.listCampaignPriorityList, new { @class = "form-control cl-black" })

                        </div>
                    </div>
                    <div class="col-md-3">
                        @Html.Label("Campaign Type")
                        <div class="form-group">
                            @Html.DropDownListFor(m => m.listCampaignType, Model.listCampaignTypeList, new { @class = "form-control cl-black" })

                        </div>
                    </div>
                    <div class="col-md-2">
                        <button type="button" id="btn_show" style="background-color:#5f004b;color:white;margin-top:15px;">
                            Search
                        </button>
                    </div>

                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="card" style="width:1100px;">


                            <div class="card-body col-sm-12" style="width: 100%; height:80%;">
                                <div class="col-m-12" id="divTable" style="overflow-x:auto !important;">
                                    <table id="tbl_rpt" class="table-striped table-bordered dataTable dtr-inline" role="grid" aria-describedby="datatable_info" style="width:100% !important;" cellspacing="0"></table>
                                </div>
                                <div class="alert alert-info" id="divNoData" style="display:none;">
                                    <span>No data found for the search</span>
                                </div>
                                @*<div class="row">
                                        <div id="loading" class="col-sm-12" style="display:none;text-align:center;" st><img src="~/Content/Images/loading.gif" style="width:100px;height:50px;" /></div>
                                    </div>*@
                            </div>

                        </div>
                    </div>
                </div>

                <div>
                    @*<button id="upload"  type="button">asdasd</button>*@

                    @*<a href='@Url.Action("uploadbasenav",new{})'>go</a>*@
                    @*<a href="/#uploadlistnavitem">Take me to the opening paragraph.</a>
                        @*<p>
                            <a class="btn btn-block text-white dropdown-toggle" style="width:1000px;height:25px;text-align:left;background-color:#5f004b;font-size:9.2846px;vertical-align:middle;"
                               data-toggle="collapse" id="asdasd" href="#uploadbasenav" role="button" aria-expanded="false">
                                CREATE  NEW CAMPAIGN
                            </a>
                        </p>*@

                </div>
                @*<ul class="nav">
                        <li class="nav-item" style="width: 100px;height:35px">
                            <a style="font-size:9.2846px" id="uploadlistnavitem" class="nav-link active" href="#uploadbasenav" data-toggle="tab" role="tab" aria-controls="about" aria-selected="true">
                                Go
                            </a>
                        </li>
                    </ul>*@

            </div>


            <div class="tab-pane navclr" style="background:#ebecf1" id="uploadbasenav">



                <div style="margin-top:5px;" class="col-md-12">

                    <div class="row col-md-6 ml-4 mt-3">

                        <div class="col-md-4">
                            @Html.Label("Campaign Name")<span style="color:red;">*</span>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.DropDownListFor(m => m.uploadCampaignName, Model.uploadCampaignNameList, new { @class = "form-control cl-black", @required = "required", MaxLength = "15" })

                            </div>
                        </div>

                    </div>
                    <p>

                        <a class="btn btn-block text-white dropdown-toggle" style="width:1000px;height:25px;text-align:left;background-color:#5f004b;font-size:9.2846px"
                           data-toggle="collapse" href="#collapseCampaignDetails" role="button" aria-expanded="false">
                            CAMPAIGN DETAILS
                        </a>

                    </p>
                    <div class="collapse  ml-5" id="collapseCampaignDetails" style="width: 88%;">

                        <div class="container">
                            <div class="row justify-content-center">
                                <div class="col-md-6">
                                    <div class="row">
                                        <div class="col-md-1">
                                            @Html.Label("Name:")
                                        </div>
                                        <div class="form-group col-md-3">
                                            <span id="bindcampaignname"></span>
                                        </div>
                                        <div class="col-md-2" style="margin-left:65px;">
                                            @Html.Label("Type:")
                                        </div>
                                        <div class="form-group" style="margin-left: -30px;">
                                            <span id="bindcampaigntype" style="margin-left:-1px;"></span>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.Label("From Date:")
                                        </div>
                                        <div class="col-md-2" style="margin-left:-51px">
                                            <span id="bindfromdate"></span>
                                        </div>
                                        <div class="col-md-2" style="margin-left:80px">
                                            @Html.Label("To Date:")
                                        </div>
                                        <div class="col-md-2" style="margin-left: -30px;">
                                            <span id="bindtodate"></span>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.Label("From Time:")
                                        </div>
                                        <div class="col-md-3" style="margin-left:-51px">
                                            <span id="bindfromtime"></span>
                                        </div>
                                        <div class="col-md-3" style="margin-left:44px">
                                            @Html.Label("To Time:")
                                        </div>
                                        <div class="col-md-3" style="margin-left:-65px;">
                                            <span id="bindtotime"></span>
                                        </div>
                                    </div>

                                </div>
                                <div class="ml-3 mr-2" style="border:1px solid rgb(61, 61, 61) ;"></div>

                                <div class="col-md-5">

                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.Label("Sender ID:")
                                        </div>
                                        <div class="col-md-3" style="margin-left:-35px">
                                            <span id="bindsenderid"></span>
                                        </div>
                                    </div>
                                    <div class="row" width="700px" height="115px">
                                        <div class="col-md-4" style="">
                                            @Html.Label("Template ID:")
                                        </div>
                                        <div class="col-md-9" style="margin-left:-50px; ">
                                            <span id="bindtemplateid" class="text"></span>@Html.HiddenFor(m => m.templatevariablecnt, new { Value = "-1" })
                                        </div>
                                    </div>


                                    @*<div class="row">
                                            <div class="col-md offset-5"></div>
                                        </div>*@
                                    <div class="row">
                                        <div class="col-md-5">
                                            @Html.Label("Message Content:")
                                        </div>
                                        <div class="form-group col-md-12">
                                            <textarea class="form-control" readonly="readonly" style="height: auto !important;" id="bindmsgcontent" rows="5"></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <hr />


                    </div>



                </div>


                <div class="col-md-12" id="Uploadingdiv">
                    <p>


                        <a class="btn btn-block text-white dropdown-toggle" style="width:1000px;height:25px;text-align:left;background-color:#5f004b;font-size:9.2846px"
                           data-toggle="collapse" href="#collapseupload" role="button" aria-expanded="false">
                            BASE UPLOAD
                        </a>
                    </p>
                    <div class="collapse  ml-5" id="collapseupload" style="width: 88%;">
                        <div class="row">
                            <div class="col-md-4" id="starttypeDiv">
                                @Html.Label("Campaign Start Type")<span style="color:red;">*</span>
                            </div>
                            <div class="col-md-4" id="starttypelistDiv">
                                <div class="form-group" style="margin-left:-139px">
                                    @Html.DropDownListFor(m => m.uploadCampaignstarttype, Model.uploadCampaignstarttypeList, new { @class = "form-control cl-black", @required = "required", @style = "width:105px" })

                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4" id="schedulenameDiv" style="display:none;">
                                @Html.Label("Schedule Time")
                            </div>
                            <div class="col-md-4" id="scheduleDiv" style="display:none;">
                                <div class="form-group" style="margin-left:-139px">
                                    @Html.TextBoxFor(m => m.scheduleDate, new { @class = "form-control cl-black", @style = "width:125px", @required = "required" })

                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4" id="prioritynameDiv" style="display:none;">
                                @Html.Label("Priority")<span style="color:red;">*</span>
                            </div>
                            <div class="col-md-4" id="priorityDiv">
                                <div class="form-group" style="margin-left:-139px;display:none;">
                                    @Html.DropDownListFor(m => m.uploadpriority, Model.uploadpriorityList, new { @class = "form-control cl-black", @style = "width:105px" })

                                </div>
                            </div>
                        </div>
                        <div class="row">

                            <div id="fileUploadm2m">
                                <div class="d-flex">
                                    <span class="mt-3">@Html.Label("Upload Base", new { style = "width:75px" }) </span>

                                    <div style="margin-left:20px">
                                        <input style="width:234px;font-size:13px;color:#5f004b;" id="fileToUpload" type="file" name="file" required="required" class="btn" accept=".xlsx,.xls,.csv" title=" Upload only .xlsx,.xls,.csv file format. The maximum file size is 40MB.">

                                    </div>
                                    <div class="mr-3 col-4">
                                        <i id="samplefiledownlod" style="color:#5f004b;font-size:13px;margin-top:10px;" class="now-ui-icons files_single-copy-04 btn btn-link">Sample Template</i>
                                    </div>
                                    <div class="col-md-4">
                                        <button style="margin-top:10px;background-color:#5f004b;color:white;" id="uploadfileid" type="button">
                                            @*<i class="fa fa-upload" style="font-size:12px;"></i>*@Upload</button>

                                    </div>


                                </div>
                            </div>
                        </div>
                        <div id="spinner-div" class="pt-5">
                            <div class="spinner-border text-primary" role="status">
                            </div>
                        </div>
                        @*<div class="row" id="loadingupload" style="width:600px;height:150px; ">
                                <img src="~/Content/Images/loading.gif" style="width:100px;height:50px;" />

                            </div>*@
                    </div>
                </div>
            </div>
            <div class="tab-pane navclr" id="campaignstatusnav">

                <div class="row ml-3 mt-3" style="width:900px;">

                    <div>
                        @Html.Label("Campaign Name")
                        <div class="form-group">
                            @Html.DropDownListFor(m => m.statuscampaignName, Model.statuscampaignNameList, new { @class = "form-control cl-black" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        @Html.Label("Created Date")
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.statusCreatedDate, new { @class = " form-control", style = "background:white", placeholder = "-Date-", @readonly = "@readonly" })

                        </div>
                    </div>
                    <div class="col-md-2">
                        @Html.Label("Status")
                        <div class="form-group">
                            @Html.DropDownListFor(m => m.statusCampaignStatus, Model.statusCampaignStatusList, new { @class = "form-control cl-black", })

                        </div>
                    </div>
                    <div class="col-md-2" style="display:none;">
                        @Html.Label("Priority")
                        <div class="form-group">
                            @Html.DropDownListFor(m => m.statusCampaignPriority, Model.statusPriorityList, new { @class = "form-control cl-black" })

                        </div>
                    </div>
                    <div class="col-md-3">
                        @Html.Label("Campaign Type")
                        <div class="form-group">
                            @Html.DropDownListFor(m => m.statusCampaignType, Model.statusCampaignTypeList, new { @class = "form-control cl-black" })

                        </div>
                    </div>
                    <div class="col-md-2">
                        <button type="button" id="btn_showstatus" style="background-color:#5f004b;color:white;margin-top:15px;">
                            Search
                        </button>
                    </div>

                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="card" style="width:1125px;">


                            <div class="card-body col-sm-12" style="width:100%; height:80%;">
                                <div class="col-sm-12" id="divTablestatus" style="overflow-x:auto !important;">
                                    <table id="tbl_rptstatus" class="table-striped table-bordered dataTable dtr-inline" role="grid" aria-describedby="datatable_info" style="width:100% !important;" cellspacing="0"></table>
                                </div>
                                <div class="alert alert-info" id="divNoData" style="display:none;">
                                    <span>No data found for the search</span>
                                </div>
                                @*<div class="row">
                                        <div id="loading" class="col-sm-12" style="display:none;text-align:center;" st><img src="~/Content/Images/loading.gif" style="width:100px;height:50px;" /></div>
                                    </div>*@
                            </div>

                        </div>
                    </div>
                </div>

            </div>
            <div class="tab-pane navclr" id="campaignreportsnav">
                <div class="row ml-3 mt-3" style="width:900px;">

                    <div>
                        @Html.Label("Campaign Name")
                        <div class="form-group">
                            @Html.DropDownListFor(m => m.reportcampaignName, Model.reportcampaignNameList, new { @class = "form-control cl-black" })

                        </div>
                    </div>
                    <div class="col-md-2">
                        @Html.Label("Created Date")
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.reportCreatedDate, new { @class = " form-control", style = "background:white", placeholder = "-Date-", @readonly = "@readonly" })

                        </div>
                    </div>
                    <div class="col-md-2">
                        @Html.Label("Status")
                        <div class="form-group">
                            @Html.DropDownListFor(m => m.reportCampaignStatus, Model.reportCampaignStatusList, new { @class = "form-control cl-black" })

                        </div>
                    </div>
                    <div class="col-md-2" style="display:none;">
                        @Html.Label("Priority")
                        <div class="form-group">
                            @Html.DropDownListFor(m => m.reportCampaignPriority, Model.reportCampaignPriorityList, new { @class = "form-control cl-black" })

                        </div>
                    </div>

                    <div class="col-md-2">
                        <button type="button" id="btn_showreport" style="background-color:#5f004b;color:white;margin-top:15px;">
                           Search
                        </button>
                    </div>

                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="card" style="width:1100px;">


                            <div class="card-body col-sm-12" style="width:100%; height:80%;">
                                <div class="col-sm-12" id="divTablereport" style="overflow-x:auto !important;">
                                    <table id="tbl_rptreport" class="table-striped table-bordered dataTable dtr-inline" role="grid" aria-describedby="datatable_info" style="width:100% !important;" cellspacing="0"></table>
                                </div>
                                <div class="alert alert-info" id="divNoData" style="display:none;">
                                    <span>No data found for the search</span>
                                </div>
                                @*<div class="row">
                                        <div id="loading" class="col-sm-12" style="display:none;text-align:center;" st><img src="~/Content/Images/loading.gif" style="width:100px;height:50px;" /></div>
                                    </div>*@
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="ViewModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">

                <div class="modal-dialog" style="width:850px;margin-left:350px;">
                    @*<div style="height:40px; margin-left:100px;  margin-top:10px;">*@

                    @*</div>*@

                    <div class="modal-content" style="width:850px;height:500px;">
                        <div class="modal-header">
                            @Html.Label("TEST SMS REPORT", new { style = "font-weight:bold; font-size:18px;" })
                            <button id="closebtnupload" data-dismiss="modal">X</button>
                        </div>

                        <div id="modal-content" class="row ml-3 mt-4" style="height:550px;width:800px;">


                            <div class="modal-body" id="modalTable" style="overflow-y:auto; overflow-x:auto; width:800px;height:400px;">
                                <table id="tbl_TestSMSDetails" class="table-striped table-bordered dataTable dtr-inline" role="grid" aria-describedby="datatable_info" style="width:100% !important;" cellspacing="0"></table>
                            </div>
                        </div>

                    </div>
                </div>
            </div>


            <div class="modal fade" id="templateModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">

                <div class="modal-dialog" style="width:850px;">
                    <div class="modal-content" style="width:850px;margin-left:-75px;height:550px;">
                        <div class="modal-header">
                            @Html.Label("SMS TEMPLATE", new { style = "font-weight:bold; font-size:18px;" })
                            <button  id="closebtn"  data-dismiss="modal">X</button>
                        </div>

                        <div id="modal-content" class="row ml-3 mt-4 text-break" style="height:550px;  width:820px;">

                            <div class="row ml-3 mt-4" style=" width:600px; height:70px;  ">
                                <div class="col-md-3">
                                    @Html.Label("Template Name")
                                    <div class="form-group">
                                        @Html.DropDownListFor(m => m.pouptemplateName, Model.pouptemplateNameList, new { @class = "form-control cl-black", @required = "required" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.Label("Template Type")
                                    <div class="form-group">
                                        @Html.DropDownListFor(m => m.pouptemplateType, Model.pouptemplateTypeList, new { @class = "form-control cl-black", @required = "required" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.Label("Content Type")
                                    <div class="form-group">
                                        @Html.DropDownListFor(m => m.poupContentType, Model.poupContentTypeList, new { @class = "form-control cl-black", @required = "required" })
                                    </div>
                                </div>
                            </div>
                            @*<div class="col-md-3">
                                    @Html.Label("Campaign Type")
                                    <div class="form-group">
                                        @Html.DropDownListFor(m => m.listCampaignType, Model.listCampaignTypeList, new { @class = "form-control cl-black", @required = "required" })

                                    </div>
                                </div>*@
                            <div class="col-md-2">
                                <br />
                                @*<button type="button" id="btn_search" style="height:35px;background-color:#212121;color:white;width:100px;" class="btn btn-block">Search</button>*@
                                <button type="button" style="background-color:#5f004b; color:white;margin-left:-140px; margin-top:25px;" onclick="loadtemplateSearchReport()">
                                   Search
                                </button>
                            </div>
                            <div class="modal-body" id="modalTable" style="overflow-y: auto; overflow-x: auto; width:800px;height:300px;">
                                <table id="tbl_templateDetails" class="table-striped table-bordered dataTable dtr-inline" role="grid" aria-describedby="datatable_info" style="width:100% !important;" cellspacing="0"></table>
                            </div>
                        </div>
                        @*<div class="modal-footer">
                                <button type="button" id="closebtn" class="btn btn-default" data-dismiss="modal">Close</button>
                            </div>*@
                    </div>
                </div>
            </div>
            <div class="modal1" style="display:none;">
                <div class="center">
                    @*<img alt="" src="https://cdnjs.cloudflare.com/ajax/libs/bxslider/4.2.5/images/bx_loader.gif" />*@
                    <img src="~/Content/Images/bx_loader.gif" />
                </div>
            </div>

            <div class="modal fade" id="UpdateModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">


                <div class="modal-dialog modal-dialog-centered" style="width:400px;height:235px;">

                    <div class="modal-content" style="width:400px;height:200px;text-align:center;margin-left:130px;">
                        <div class="modal-header">
                            @Html.Label("Campaign Validity Extension", new { style = "font-weight:bold; font-size:18px;" })
                            <button id="closebtnupload" data-dismiss="modal">X</button>
                        </div>
                        <table style="height:200px; width:390px;">
                            <tr>
                                <td> @Html.HiddenFor(m => m.updatedId, new { Value = "-1" }) @Html.HiddenFor(m => m.updatedFromDate, new { Value = "-1" })</td>

                            </tr>

                            <tr>
                                <td style="width:120px; ">
                                    @Html.Label("To Date")<span style="color:red;">*</span>
                                </td>
                                <td style="width:180px;text-align:left;">
                                    @Html.TextBoxFor(m => m.updatedToDate, new { @class = " form-control mask-date", style = "background:white;width:150px;", placeholder = "-To updated Date-", @readonly = "@readonly" })

                                </td>
                            </tr>
                            <tr>
                                <td style="width:120px;">
                                    @Html.Label("To Time")<span style="color:red;">*</span>
                                </td>
                                <td style="width:180px; text-align:left;">

                                    @Html.TextBoxFor(m => m.updatedToTime, new { @class = " form-control", style = "background:white;width:150px;", placeholder = "-updated To Time-", @readonly = "@readonly" })
                                    @*@Html.TextBoxFor(m => m.updatedToTime, new { @class = " form-control", type = "time", style = "background:white;width:100px;" })*@

                                </td>
                            </tr>
                            <tr>
                                <td colspan="2" style="text-align:center;">
                                    <button type="button" style="background-color:#5f004b; color:white;" onclick="submitUpdateTime()">Update</button>
                                </td>
                            </tr>

                        </table>


                    </div>

                </div>
            </div>

        </div>

        @*</form>*@

    }
</div>


@section scripts {

    <script>
        function showLoadingSpinner() {
           
            $('.modal1').show();
        };
        function hideLoadingSpinner() {
            
            $('.modal1').hide();
        };

        $(document).ready(function () {
         
            $('#StaticSmsDiv').hide();
            $('#dynamicSmsDiv').hide();
            $('#messageScriptdiv').hide();
            $('#savecampaignM2M').hide();
            $('#campaignsubmit').hide();
            $("#Uploadingdiv").hide();
            $("#smstemplatediv").hide();
        });

        
        $('form').on('keypress', function (e) {
            return e.which != 13;
        });

        
        $('#senderId').on('change', function () {
            if ($('#smsType').val() != "3") {

                gettemplateidfromsenderidsmstype($("#senderId").val(), $('#smsType').val());
            }
        });


        $('#campaignsubmit').on('click', function () {

            var a = $("#Idform").val();
            var jsondata;

            if ($("#Idform").valid()) {               
                $('#savecampaignM2M').hide();
                const container1 = document.querySelector('#generatelabel');
                removeAllChildNodes(container1);
                const container2 = document.querySelector('#messageto1stnumber');
                removeAllChildNodes(container2);
                const container3 = document.querySelector('#messageto2ndnumber');
                removeAllChildNodes(container3);
                $('#messageScriptdiv').hide();
                document.getElementById('SMSTest_0__message').innerHTML = "";
                document.getElementById('SMSTest_1__message').innerHTML = "";
                document.getElementById('smscountmessage1').innerHTML = "";
                document.getElementById('smscountmessage2').innerHTML = "";

                var templateTypeId = document.getElementById("templateTypeName").innerHTML;

                if (templateTypeId == "STATIC") {
                    $("#variablesnameid").hide();
                }
                else if (templateTypeId == "DYNAMIC") {
                    $("#variablesnameid").show();

                }
                var data2 = $("#Idform").serialize();
           
                $.ajax({
                    url: "@Url.Action(MVC.Campaign.CreatebulksmsCampaign())",
                    type: 'POST',
                    data: data2,
                    success: function (e) {

                        jsondata = JSON.parse(e);
                        if (jsondata.status != null && jsondata.status == 7) {
                            ErrorMsg("The To time should be 4 hours more than the current time ");
                            $('#savecampaignM2M').hide();
                        }
                        //else if (jsondata.status != null && jsondata.status == 3) {
                        //    ErrorMsg("The From Time should be greater than current Time");
                        //    $('#savecampaignM2M').hide();
                        //}
                        else if (jsondata.status != null && jsondata.status == 5) {
                            ErrorMsg("The To Time should be greater than From Time");
                            $('#savecampaignM2M').hide();
                        }
                        else {
                            $('#campaignsubmit').hide();
                            const container1 = document.querySelector('#generatelabel');
                            removeAllChildNodes(container1);
                            const container2 = document.querySelector('#messageto1stnumber');
                            removeAllChildNodes(container2);
                            const container3 = document.querySelector('#messageto2ndnumber');
                            removeAllChildNodes(container3);
                            $('#messageScriptdiv').hide();
                            document.getElementById('SMSTest_0__message').innerHTML = "";
                            document.getElementById('SMSTest_1__message').innerHTML = "";
                            document.getElementById('smscountmessage1').innerHTML = "";
                            document.getElementById('smscountmessage2').innerHTML = "";

                            $("input[id=btnShow]").attr("disabled", "disabled");
                            $('#campaignsubmit').hide();
                            $('#savecampaignM2M').hide();
                            $("#collapseTestSms").addClass("show");
                            $('#testsmsdiv').show();
                            $("#SMSTestingCompleteDiv").show()
                            var templateTypeId = document.getElementById("templateTypeName").innerHTML;

                            if (templateTypeId == "STATIC") {
                                $("#variablesnameid").hide();
                            }
                            else if (templateTypeId == "DYNAMIC") {
                                $("#variablesnameid").show();

                            }
                            document.getElementById('SMSTest_0__message').innerHTML = "";
                            document.getElementById('SMSTest_1__message').innerHTML = "";
                            if (templateTypeId == "DYNAMIC" && jsondata.SMSvariable != null) {
                                for (i = 0; i < jsondata.SMSvariable.length; i++) {

                                    var div = document.createElement('div');
                                    div.innerHTML = '<labelvariable class="form-controlnew ">' + jsondata.SMSvariable[i].renameVariable +'</labelvariable>';
                                    div.style.wordWrap = "break-word";
                                    document.getElementById("generatelabel").appendChild(div);
                                }
                                for (i = 0; i < jsondata.SMSvariable.length; i++) {
                                    var div1 = document.createElement('div');
                                    div1.innerHTML = '<input class="form-control" id="SMSTest_0__variableData_' + i + '__variableContent" name="SMSTest[0].variableData[' + i + '].variableContent"  MaxLength="30" type="text" value=""><input type="hidden" id="SMSTest_0__variableData_' + i + 'variableLabel" name="SMSTest[0].variableData[' + i + '].variableLabel"  MaxLength="30"  type="text" value="' + jsondata.SMSvariable[i].renameVariable + '">';
                                    document.getElementById("messageto1stnumber").appendChild(div1);
                                }

                                for (i = 0; i < jsondata.SMSvariable.length; i++) {
                                    var div2 = document.createElement('div');
                                    div2.innerHTML = '<input class=" form-control" id="SMSTest_1__variableData_' + i + '__variableContent" name="SMSTest[1].variableData[' + i + '].variableContent"  MaxLength="30"  type="text" value=""><input type="hidden" id="SMSTest_1__variableData_' + i + 'variableLabel" name="SMSTest[1].variableData[' + i + '].variableLabel"   MaxLength="30"  type="text" value="' + jsondata.SMSvariable[i].renameVariable + '">';
                                    document.getElementById("messageto2ndnumber").appendChild(div2);


                                }
                            }
                        }

                        document.getElementById('SMSTest_0__message').innerHTML = jsondata.smsContent;
                        document.getElementById('SMSTest_1__message').innerHTML = jsondata.smsContent;

                    }
                }).fail(function (xhr, status, error) {
                    $("#loading").hide();
                    $("input[type=button]").removeAttr("disabled");
                    if (xhr.status == 401) {
                        alert("Click to continue", "Session Timedout", function () {
                            closing = false;
                            window.location = JSON.parse(xhr.responseText).LogOnUrl;
                        })
                    }
                    else if (xhr.status == 507) {
                        $("#divNoData span").text(" Result is too large.");
                        $("#divNoData").show();
                        $("input[type=button]").removeAttr("disabled");
                    }
                    else {
                        alert("Unable to fetch data from server", "Failed");

                    }
                });
               

            }
            else {
                ErrorMsg("Please fill in all fields.")

            }

        });

        function resetfunctionUpload() {
            document.getElementById("Idform").reset();
            $("#campaignId").val(null);
            $("#uploadCampaignName").val(null);
            document.getElementById("bindcampaignname").innerHTML = "";
            document.getElementById("bindcampaigntype").innerHTML = "";
            document.getElementById("bindfromdate").innerHTML = "";
            document.getElementById("bindtodate").innerHTML = "";
            document.getElementById("bindfromtime").innerHTML = "";
            document.getElementById("bindtotime").innerHTML = "";
            document.getElementById("bindsenderid").innerHTML = "";
            document.getElementById("bindtemplateid").innerHTML = "";
            document.getElementById("bindmsgcontent").innerHTML = "";           
            $("#collapseCampaignDetails").removeClass("show");
            $("#Uploadingdiv").hide();
            $('#scheduleDiv').hide();
            $('#schedulenameDiv').hide();
            $("#loadingupload").hide();
            $("#loadingupload").show();
        }

        $('#createsms').on('click', function () {

            var a = $("#Idform").val();
            var jsondata;
           
            if ($("#Idform").valid()) {
                var data2 = $("#Idform").serialize();
                var templateTypeId = document.getElementById("templateTypeName").innerHTML;
                if (templateTypeId == "STATIC") {                    
                    $.ajax({
                        url: "@Url.Action(MVC.Campaign.createsms())",
                        type: 'POST',
                        data: data2,
                        success: function (e) {

                            jsondata = JSON.parse(e);
                            console.log(jsondata);
                            // [{ "SmsId": "1", "Sms_Leg": 136, "Sms_Parts": 1 }, { "SmsId": "2", "Sms_Leg": 136, "Sms_Parts": 1 }]
                           
                            if (jsondata.status == 1)
                            {
                             //   if (jsondata.response[0].templateType == "1" && jsondata.response[1].templateType == "1") {
                                if (jsondata.response[0].SmsId == "1")
                                {
                                    document.getElementById("SMSTest_0__message").innerHTML = jsondata.response[0].message;
                                    document.getElementById("smscountmessage1").innerHTML = '' + jsondata.response[0].Sms_Leg + '/' + jsondata.response[0].Sms_Parts + '';

                                }
                                if (jsondata.response[1].SmsId == "2")
                                {

                                  document.getElementById("SMSTest_1__message").innerHTML = jsondata.response[1].message;
                                  document.getElementById("smscountmessage2").innerHTML = '' + jsondata.response[1].Sms_Leg + '/' + jsondata.response[1].Sms_Parts + '';

                                }

                                //}
                                //else if (jsondata.response[0].templateType == "2" && jsondata.response[1].templateType == "2") {
                                //    if (jsondata.response[0].SmsId == "1") {
                                //        document.getElementById("SMSTest_0__message").innerHTML = jsondata.response[0].message;
                                //        document.getElementById("smscountmessage1").innerHTML = '' + jsondata.response[0].Sms_Leg + '/' + jsondata.response[0].Sms_Parts + '';

                                //    }
                                //    if (jsondata.response[1].SmsId == "2") {

                                //        document.getElementById("SMSTest_1__message").innerHTML = jsondata.response[1].message;
                                //        document.getElementById("smscountmessage2").innerHTML = '' + jsondata.response[1].Sms_Leg + '/' + jsondata.response[1].Sms_Parts + '';

                                //    }
                                //}
                                $('#campaignName').attr('readonly', 'true');

                                $('#messageScriptdiv').show();
                                $('#sendsmsdiv').show();
                            }
                            else if(jsondata.status == 9)
                            {
                                $('#sendsmsdiv').hide();
                                $('#messageScriptdiv').hide();

                                ErrorMsg("campaign already exist");
                                //resetfunction();
                            }
                            else if(jsondata.status == 7)
                            {
                                $('#sendsmsdiv').hide();
                                $('#messageScriptdiv').hide();
                                ErrorMsg("The To Time should be 4 hours more than the current Time ");
                                //resetfunction();
                            }
                            //else if (jsondata.status == 3) {
                            //    $('#sendsmsdiv').hide();
                            //    $('#messageScriptdiv').hide();
                            //    ErrorMsg("The From Time should be greater than the current Time ");
                            //    //resetfunction();
                            //}
                            else if(jsondata.status == 5)
                            {
                                $('#sendsmsdiv').hide();
                                $('#messageScriptdiv').hide();
                                ErrorMsg("The To Time should be greater than From Time ");
                               // resetfunction();
                            }    
                            //console.log(jsondata.SMSvariable.length);
                           

                            else {
                                $('#sendsmsdiv').hide();
                                ErrorMsg("Campaign name already exist.")
                                //resetfunction();
                            }


                            //console.log(jsondata.SMSvariable.length);

                        }
                    }).fail(function (xhr, status, error) {
                        $("#loading").hide();
                        $("input[type=button]").removeAttr("disabled");
                        if (xhr.status == 401) {
                            alert("Click to continue", "Session Timedout", function () {
                                closing = false;
                                window.location = JSON.parse(xhr.responseText).LogOnUrl;
                            })
                        }
                        else if (xhr.status == 507) {
                            $("#divNoData span").text(" Result is too large.");
                            $("#divNoData").show();
                            $("input[type=button]").removeAttr("disabled");
                        }
                        else {
                            alert("Unable to fetch data from server", "Failed");

                        }
                    });
                    
                }
                else if (templateTypeId == "DYNAMIC") {
                    
                    $.ajax({
                        url: "@Url.Action(MVC.Campaign.createsms())",
                        type: 'POST',
                        data: data2,

                        success: function (e) {    
                            jsondata = JSON.parse(e);
                            //console.log(jsondata);                           
                            // [{ "SmsId": "1", "Sms_Leg": 136, "Sms_Parts": 1 }, { "SmsId": "2", "Sms_Leg": 136, "Sms_Parts": 1 }]
                          
                            if (jsondata.status == 1)
                            {
                              
                                if (jsondata.response[0].SmsId == "1")
                                {
                                   document.getElementById("SMSTest_0__message").innerHTML = jsondata.response[0].message;
                                    document.getElementById("smscountmessage1").innerHTML = '' + jsondata.response[0].Sms_Leg + '/' + jsondata.response[0].Sms_Parts + '';                                    
                                }
                                if (jsondata.response[1].SmsId == "2")
                                {
                                    document.getElementById("SMSTest_1__message").innerHTML = jsondata.response[1].message;
                                    document.getElementById("smscountmessage2").innerHTML = '' + jsondata.response[1].Sms_Leg + '/' + jsondata.response[1].Sms_Parts + '';
                                }
                                $('#messageScriptdiv').show();
                                $('#sendsmsdiv').show();
                                $('#campaignName').attr('readonly', 'true');

                            }
                            else if (jsondata.status == 9) {
                                $('#sendsmsdiv').hide();
                                $('#messageScriptdiv').hide();
                                ErrorMsg("campaign already exist");
                                //resetfunction();

                            }
                            else if (jsondata.status == 7) {
                                $('#sendsmsdiv').hide();
                                $('#messageScriptdiv').hide();
                                ErrorMsg("The To time should be 4 hours more than the current Time ");
                                //resetfunction();
                            }
                            //else if (jsondata.status == 3) {
                            //    $('#sendsmsdiv').hide();
                            //    $('#messageScriptdiv').hide();
                            //    ErrorMsg("The From Time should be greater than the current Time ");
                            //    //resetfunction();
                            //}
                            else if (jsondata.status == 5) {
                                $('#sendsmsdiv').hide();
                                $('#messageScriptdiv').hide();
                                ErrorMsg("The To Time should be greater than From Time ");
                                //resetfunction();
                            }      

                            //console.log(jsondata.SMSvariable.length);

                        }
                    }).fail(function (xhr, status, error) {
                        $("#loading").hide();
                        $("input[type=button]").removeAttr("disabled");
                        if (xhr.status == 401) {
                            alert("Click to continue", "Session Timedout", function () {
                                closing = false;
                                window.location = JSON.parse(xhr.responseText).LogOnUrl;
                            })
                        }
                        else if (xhr.status == 507) {
                            $("#divNoData span").text(" Result is too large.");
                            $("#divNoData").show();
                            $("input[type=button]").removeAttr("disabled");
                        }
                        else {
                            alert("Unable to fetch data from server", "Failed");

                        }
                    });
                    
                }


                //functionafterajax(jsondata);

            }
            else {
                ErrorMsg("Please fill in all fields.")
            }


        });



        $('#SendSms').on('click', function () {

            var a = $("#Idform").val();


            if ($("#Idform").valid()) {
                var data2 = $("#Idform").serialize();
              
                var templateTypeId = document.getElementById("templateTypeName").innerHTML;
                //alert(templateTypeId);
                if (templateTypeId == "STATIC") {

                    //if ($("#smsType").val() == "1") {

                    $.ajax({
                        url: "@Url.Action(MVC.Campaign.SendSMS())",
                        type: 'POST',
                        data: data2,
                        success: function (e) {



                            jsondata = JSON.parse(e);
                            if (jsondata.status == 7) {
                                ErrorMsg("The To Time should be 4 hours more than the current time ");
                                //resetfunction();
                            }
                            //else if (jsondata.status == 3) {
                            //    ErrorMsg("The From Time should be greater than current Time ");
                            //    //resetfunction();
                            //}
                            else if (jsondata.status == 5) {
                                ErrorMsg("The To Time should be greater than From Time ");
                                //resetfunction();
                            }
                            else {
                                $('#CampaignCreationButtondiv').show();
                                $("#campaignId").val(jsondata.campaignId);
                                var pushedCount = jsondata.smsPushed;
                                console.log(pushedCount, "count")
                                var remainingcount = 6 - pushedCount;
                                // console.log(remainingcount);
                                if (remainingcount > 0) {
                                    SuccessMsg(jsondata.response + " ,Remaining SMS: " + remainingcount + "");
                                }
                                else {
                                    $("#SMSTestingCompleteDiv").hide()
                                    $('#sendsmsdiv').hide();
                                    SuccessMsg(jsondata.response + " ,Remaining SMS: " + remainingcount + ", Please Save Campaign");
                                }
                            }
                            //console.log(jsondata.SMSvariable.length);
                        }
                    }).fail(function (xhr, status, error) {
                        $("#loading").hide();
                        $("input[type=button]").removeAttr("disabled");
                        if (xhr.status == 401) {
                            alert("Click to continue", "Session Timedout", function () {
                                closing = false;
                                window.location = JSON.parse(xhr.responseText).LogOnUrl;
                            })
                        }
                        else if (xhr.status == 507) {
                            $("#divNoData span").text(" Result is too large.");
                            $("#divNoData").show();
                            $("input[type=button]").removeAttr("disabled");
                        }
                        else {
                            alert("Unable to fetch data from server", "Failed");

                        }
                    });
                   
                }
                else if (templateTypeId == "DYNAMIC")
                { 

                    $.ajax({
                        url: "@Url.Action(MVC.Campaign.SendSMS())",
                        type: 'POST',
                        data: data2,
                        success: function (e) {

                            jsondata = JSON.parse(e);
                            if (jsondata.status == 7)
                            {
                                ErrorMsg("The To Time should be 4 hours more than the current Time ");
                            }
                            //else if (jsondata.status == 3) {
                            //    ErrorMsg("The From Time should be greater than current Time ");
                            //}
                            else if (jsondata.status == 5)
                            {
                                ErrorMsg("The To Time should be greater than From Time ");
                            }
                            else
                            {
                                $('#CampaignCreationButtondiv').show();
                                $("#campaignId").val(jsondata.campaignId);
                                var pushedCount = jsondata.smsPushed;
                               // console.log(pushedCount, "count")
                                var remainingcount = 6 - pushedCount;
                                //console.log(remainingcount);

                                if (remainingcount > 0)
                                {
                                    SuccessMsg(jsondata.response + " ,Remaining SMS: " + remainingcount + "");
                                }
                                else
                                {
                                    $("#SMSTestingCompleteDiv").hide()
                                    $('#sendsmsdiv').hide();
                                    SuccessMsg(jsondata.response + " ,Remaining SMS: " + remainingcount + ", Please Save Campaign");
                                }

                            }

                        }
                    }).fail(function (xhr, status, error)
                    {
                        $("#loading").hide();
                        $("input[type=button]").removeAttr("disabled");
                        if (xhr.status == 401) {
                            alert("Click to continue", "Session Timedout", function () {
                                closing = false;
                                window.location = JSON.parse(xhr.responseText).LogOnUrl;
                            })
                        }
                        else if (xhr.status == 507) {
                            $("#divNoData span").text(" Result is too large.");
                            $("#divNoData").show();
                            $("input[type=button]").removeAttr("disabled");
                        }
                        else {
                            alert("Unable to fetch data from server", "Failed");

                        }
                    });
                    
                }
                
            }
            else {
                ErrorMsg("Please fill in all fields.")
            }

        });


        $('#SaveCampaignnew').on('click', function () {

            var a = $("#Idform").val();
           
            var jsondata;
           
            if ($("#Idform").valid()) {
                var data2 = $("#Idform").serialize();
               
                $("#SMSTestingCompleteDiv").hide()
                $('#sendsmsdiv').hide();
                    $.ajax({
                        url: "@Url.Action(MVC.Campaign.SaveCampaign())",
                        type: 'POST',
                        data: data2,
                        success: function (e) {

                            jsondata = JSON.parse(e);
                            if (jsondata.status == 7) {
                                ErrorMsg("The To Time should be 4 hours more than the current Time ");
                            }
                            //else if (jsondata.status == 3) {
                            //    ErrorMsg("The From Time should be greater than current Time ");
                            //}
                            else if (jsondata.status == 5) {
                                ErrorMsg("The To Time should be greater than From Time ");
                            }
                            else if (jsondata.status == 1){
                           
                                $("#testsmsdiv").hide();
                                SuccessMsg(jsondata.response);
                                 getcampigndrowpdown();
                                
                                getcampigndropdownList();
                                getcampignlistdropdownList();
                                $("#smstemplatediv").hide();
                                $('#StaticSmsDiv').hide();
                                $('#dynamicSmsDiv').hide();
                                $('#messageScriptdiv').hide();
                                $('#savecampaignM2M').hide();
                                $('#campaignsubmit').hide();
                                $("#Uploadingdiv").hide();
                                $("#smstemplatediv").hide();
                                $('#CampaignCreationButtondiv').hide();

                                document.getElementById("campaignName").readOnly = false;      
                               // resetfunction();
                              //  $('select[id^="uploadCampaignName"] option[value=' + $("#campaignId").val() + ']').attr("selected", "selected");
                              //  geteachcampaigndetails($('#uploadCampaignName').val());
                                $("#campaignId").val(null);
                                $("input[id=btnShow]").removeAttr("disabled");
                                redirectToBaseupload();

                            }
                            else {
                                ErrorMsg(jsondata.response);
                            }
                        }
                    }).fail(function (xhr, status, error) {
                        $("#loading").hide();
                        $("input[type=button]").removeAttr("disabled");
                        if (xhr.status == 401) {
                            alert("Click to continue", "Session Timedout", function () {
                                closing = false;
                                window.location = JSON.parse(xhr.responseText).LogOnUrl;
                            })
                        }
                        else if (xhr.status == 507) {
                            $("#divNoData span").text(" Result is too large.");
                            $("#divNoData").show();
                            $("input[type=button]").removeAttr("disabled");
                        }
                        else {
                            alert("Please select Campaign Name", "Failed");

                        }
                    });
                   
            }
            else {
                ErrorMsg("Please fill in all fields.")
            }


        });

        function submitUpdateTime()
        {
            var a = $("#Idform").val();
            if ($("#Idform").valid()) {
                
                 var data2 = $("#Idform").serialize();
                 $.ajax({
                      url: "@Url.Action(MVC.Campaign.Campaignupdate())",
                      type: 'POST',
                      data: data2,
                      success: function (e) {
                          var obj = JSON.parse(e)

                          if (obj.status == "1") {
                              loadReport();
                              $("#updatedToTime").flatpickr({
                                  enableTime: true,
                                  noCalendar: true,
                                  minuteIncrement: 1,
                                  dateFormat: "h:i K",
                                  static: true

                              });
                              $("#updatedToDate").flatpickr({
                                  dateFormat: "d/m/Y",
                                  minDate: "today"
                                  //enableTime: true,
                                  //noCalendar: true,
                                  //dateFormat: "H:i",

                              });
                              $("#UpdateModal").modal('hide');
                              SuccessMsg("Successfully updated");
                          }
                          else {
                              ErrorMsg(obj.response);
                          }
                     
                     }
                 }).fail(function (xhr, status, error) {
                     $("#loading").hide();
                     $("input[type=button]").removeAttr("disabled");
                     if (xhr.status == 401) {
                         alert("Click to continue", "Session Timedout", function () {
                             closing = false;
                             window.location = JSON.parse(xhr.responseText).LogOnUrl;
                         })
                     }
                     else if (xhr.status == 507) {
                         $("#divNoData span").text(" Result is too large.");
                         $("#divNoData").show();
                         $("input[type=button]").removeAttr("disabled");
                     }
                     else {
                         alert("Unable to fetch data from server", "Failed");

                     }
                 });
                
                   
            }
        }
        
        function gettemplateidfromsenderidsmstype(senderId,smstype)
        {

            $.ajax({
                url: "@Url.Action(MVC.Campaign.GetTemplateIdfromSenderId())",
                type: 'GET',
                data: { senderId: senderId, smstype: smstype },
                success: function (minames) {
                    //console.log(minames);
                        $("#templateId").html("");
                        $("#templateId").append(
                            $('<option></option>').val('').html('-Select-'));
                        $.each(minames, function (i, minames) {
                            $("#templateId").append(
                                $('<option></option>').val(minames.VALUE).html(minames.TEXT));
                        });
                }
                }).fail(function (xhr, status, error) {
                    $("#loading").hide();
                    $("input[type=button]").removeAttr("disabled");
                    if (xhr.status == 401) {
                        alert("Click to continue", "Session Timedout", function () {
                            closing = false;
                            window.location = JSON.parse(xhr.responseText).LogOnUrl;
                        })
                    }
                    else if (xhr.status == 507) {
                        $("#divNoData span").text(" Result is too large.");
                        $("#divNoData").show();
                        $("input[type=button]").removeAttr("disabled");
                    }
                    else {
                        alert("Unable to fetch data from server", "Failed");

                    }
            });
           
        }
        

        function getsenderidfromsmstype(smstype)
        {

            $.ajax({
                url: "@Url.Action(MVC.Campaign.GetSenderIdFromSmsType())",
                type: 'GET',
                data: { smstype: smstype},
                success: function (minames) {
                    //console.log(minames);
                    $("#senderId").html("");
                    $("#senderId").append(
                            $('<option></option>').val('').html('-Select-'));
                        $.each(minames, function (i, minames) {
                            $("#senderId").append(
                                $('<option></option>').val(minames.VALUE).html(minames.TEXT));
                        });
                }
            }).fail(function (xhr, status, error) {
                $("#loading").hide();
                $("input[type=button]").removeAttr("disabled");
                if (xhr.status == 401) {
                    alert("Click to continue", "Session Timedout", function () {
                        closing = false;
                        window.location = JSON.parse(xhr.responseText).LogOnUrl;
                    })
                }
                else if (xhr.status == 507) {
                    $("#divNoData span").text(" Result is too large.");
                    $("#divNoData").show();
                    $("input[type=button]").removeAttr("disabled");
                }
                else {
                    alert("Unable to fetch data from server", "Failed");

                }
            });
            
        }
        $("#updatedToTime").flatpickr({
            enableTime: true,
            noCalendar: true,
            minuteIncrement: 1,
            dateFormat: "h:i K",
            static: true

        });
        $("#updatedToDate").flatpickr({
            dateFormat: "d/m/Y",
            minDate: "today"
            //enableTime: true,
            //noCalendar: true,
            //dateFormat: "H:i",

        });

        $("#fromDate").flatpickr({
            dateFormat: "d/m/Y",
            minDate: "today",
            
                //enableTime: true,
                //noCalendar: true,
                //dateFormat: "H:i",

        });
        
        $('#fromDate').on('change', function () {
            var datevalue = $('#fromDate').val();
            $("#toDate").flatpickr({
                dateFormat: "d/m/Y",
                minDate: datevalue,

            });
        });


        $("#listCreatedDate").flatpickr({
            dateFormat: "d/m/Y",
            maxDate: "today",

        });

        $("#statusCreatedDate").flatpickr({
            dateFormat: "d/m/Y",
            maxDate: "today",

        });
        $("#reportCreatedDate").flatpickr({
            dateFormat: "d/m/Y",
            maxDate: "today",

        });
        

        $("#fromTime").flatpickr({

            enableTime: true,
            noCalendar: true,
            minuteIncrement:1,
            

            dateFormat: "h:i K",
            time_24hr: false,
            //defaultHour: new Date().getHours(),
            //defaultMinute: new Date().getMinutes(),
            defaultHour:00,
            defaultMinute:00,
        });
       

        $("#toTime").flatpickr({

            enableTime: true,
            noCalendar: true,
            minuteIncrement: 1,
            defaultHour: 23,
            defaultMinute: 59,
            dateFormat: "h:i K",
            time_24hr: false
        });
        
        $('#templateId').on('change', function () {

            var templateId = $('#templateId').val();
            var smstype = $('#smsType').val();
            var variablecnt;
            //var variableNames;
            document.getElementById("smsContent").innerHTML="";

             $.ajax({
                url: "@Url.Action(MVC.Campaign.GetmessagecontentfromTemplate())",
                type: 'GET',
                 data: { templateId: templateId},
                 success: function (minames) {
                     var obj = JSON.parse(minames);
                     //console.log(obj);
                     if (smstype == "1") {
                         document.getElementById("smsContent").innerHTML = obj[0].templateContent;
                         variablecnt = obj[0].variableCount;
                         document.getElementById("smscount").innerHTML = obj[0].smsLength;
                     }
                     else if (smstype == "2") {
                            document.getElementById("smsContent").innerHTML = obj[0].templateContent;
                            variablecnt = obj[0].variableCount;
                            document.getElementById("smscount").innerHTML = obj[0].smsLength;
                     }

                     afterAjax()
                 }
             }).fail(function (xhr, status, error) {
                 $("#loading").hide();
                 $("input[type=button]").removeAttr("disabled");
                 if (xhr.status == 401) {
                     alert("Click to continue", "Session Timedout", function () {
                         closing = false;
                         window.location = JSON.parse(xhr.responseText).LogOnUrl;
                     })
                 }
                 else if (xhr.status == 507) {
                     $("#divNoData span").text(" Result is too large.");
                     $("#divNoData").show();
                     $("input[type=button]").removeAttr("disabled");
                 }
                 else {
                     alert("Unable to fetch data from server", "Failed");

                 }
             });
           

            function afterAjax() {

                const container = document.querySelector('#generated');
                removeAllChildNodes(container);
                //console.log(variablecnt,"sdfd")
                //console.log(variableNames,"variableNames")


                for (i = 0, j = 1; i < variablecnt; i++,j++) {

                    var div = document.createElement('row');
                    div.innerHTML = '<div class="row"><div class="col-md-6"><input class=" form-control" id="SMSvariable_' + i + '__variableName" name="SMSvariable[' + i + '].variableName" required="required" MinLength="3" MaxLength="12" readonly="readonly" style="background:white;" type="text" value="VAR' + j + '"></div>  <div class="col-md-6"><input class=" form-control" id="SMSvariable_' + i + '__renameVariable" name="SMSvariable[' + i + '].renameVariable" required="required" MinLength="3" MaxLength="12" type="text" value=""></div></div>';

                    document.getElementById("generated").appendChild(div);
                }
            }
        });
        function removeAllChildNodes(parent) {
            while (parent.firstChild) {
                parent.removeChild(parent.firstChild);
            }
        }

        $('#configreset').click(function () {
            $('#Idform')[0].reset();
        });

       
        function getTamplateDetails(event) {
            
            var currentRow = $(event).closest("tr");
            document.getElementById("templateId").innerHTML = event.id; //$(event).closest('tr').children('td:eq(3)').text();         
            var parts = document.getElementById("part_" + event.id).value;
            //alert(parts);
            var array = parts.split(",");
            var partscount = array[0];
            var variablecnt = array[1];
            var unicodestatus = array[3];
            var sendrId = array[2];
            var col1 = currentRow.find("td:eq(1)"); // get current row 1st TD value     
            document.getElementById("bindsenderName").innerHTML = $(event).closest('tr').children('td:eq(0)').text();
            document.getElementById("smsContent").innerHTML = $(event).closest('tr').children('td:eq(3)').text();
            document.getElementById("smscount").innerHTML = $(event).closest('tr').children('td:eq(5)').text() + '/' + partscount;//$(event).closest('tr').children('td:eq(7)').text() + '';
            document.getElementById("bindtemplatename").innerHTML = $(event).closest('tr').children('td:eq(1)').text();
            document.getElementById("templateTypeName").innerHTML = $(event).closest('tr').children('td:eq(2)').text();
            document.getElementById("senderId").innerHTML = sendrId;
            document.getElementById("unicodeStatus").value = unicodestatus;

            $('#templateTypeName').css("background-color", "#ebecf1");
            $('#StaticSmsDiv').hide();
            $('#dynamicSmsDiv').hide();
            $('#templateiddiv').hide();
            $('#templateidnamediv').hide();
            $('#savecampaignM2M').hide();
            $('#campaignsubmit').hide();
            $('#testsmsdiv').hide();
            $('#sendsmsdiv').hide();
            document.getElementById("SMSTest_1__mobileNumber").value = "";
            document.getElementById("SMSTest_0__mobileNumber").value = "";
            if ($(event).closest('tr').children('td:eq(4)').text() == "Promotional") {
                //alert($(event).closest('tr').children('td:eq(4)').text());
                $("#timealertdiv").show();
            }
            else {
                $("#timealertdiv").hide();
            }


            if ($(event).closest('tr').children('td:eq(2)').text() == "STATIC") {
                $("#smstemplatediv").show();
                $('#StaticSmsDiv').show();
                $('#dynamicSmsDiv').hide();
                $('#templateiddiv').show();
                $('#templateidnamediv').show();
                $('#savecampaignM2M').hide();
                $('#campaignsubmit').show();
            }
            else if ($(event).closest('tr').children('td:eq(2)').text() == "DYNAMIC") {
                $("#smstemplatediv").show();
                $('#StaticSmsDiv').show();
                $('#dynamicSmsDiv').show();
                $('#templateiddiv').show();
                $('#templateidnamediv').show();
                $('#savecampaignM2M').hide();
                $('#campaignsubmit').show();
            }
            const container = document.querySelector('#generated');
            removeAllChildNodes(container);

            for (i = 0, j = 1; i < variablecnt; i++ , j++) {

                var div = document.createElement('row');
                div.innerHTML = '<div class="row" style="margin-top:10px;" ><div class="col-md-6"><input class=" form-control" id="SMSvariable_' + i + '__variableName" name="SMSvariable[' + i + '].variableName"   readonly="readonly" MaxLength="12" MinLength="3" required="required" style="background:white;" type="text" value="VAR' + j + '"></div>  <div class="col-md-6"><input class=" form-control" id="SMSvariable_' + i + '__renameVariable" name="SMSvariable[' + i + '].renameVariable"  MaxLength="12" MinLength="3" required="required" type="text" value=""></div></div>';

                document.getElementById("generated").appendChild(div);
            }
            //$('#tbl_templateDetails tbody').empty();            
            $('#closebtn').click();
        }

        
        $('#uploadCampaignstarttype').on('change', function () {

            if ($('#uploadCampaignstarttype').val() == "1") {

                //$('#prioritynameDiv').show();
               // $('#priorityDiv').show();
                $('#schedulenameDiv').hide();
                $('#scheduleDiv').hide();
                $("#scheduleDate").val("");
                
            }
            else if ($('#uploadCampaignstarttype').val() == "2") {
                //$('#prioritynameDiv').show();
                //$('#priorityDiv').show();
                $('#schedulenameDiv').show();
                $('#scheduleDiv').show();
            }
            else if ($('#uploadCampaignstarttype').val() == "3") {

                //$('#prioritynameDiv').show();
                //$('#priorityDiv').show();
                $('#schedulenameDiv').hide();
                $('#scheduleDiv').hide();
                $("#scheduleDate").val("");

            }
            else {
               // $('#prioritynameDiv').hide();
               // $('#priorityDiv').hide();
                $('#schedulenamediv').hide();
                $('#schedulediv').hide();
                $("#scheduleDate").val("");
              
            }
        });

        $('#btn_show').click(function () {
           
            if ($("#Idform").valid()) {           
                reinitializeDataTable(tbl_rpt);
                loadReport();

            }
            else {
                ErrorMsg("Please select all fields")
            }

        });

        $('#btn_showstatus').click(function () {


            if ($("#Idform").valid()) {
                reinitializeDataTable(tbl_rptstatus);
                loadReportstatus();
            }

            else {
                ErrorMsg("Please select all fields")
            }


        });
        $('#btn_showreport').click(function () {


            if ($("#Idform").valid()) {
                reinitializeDataTable(tbl_rptreport);
                loadReportreport();
            }

            else {
                ErrorMsg("Please select all fields")
            }

        });

        function reinitializeDataTable(table) {
            var $table = $(table);
            if ($.fn.dataTable.isDataTable(table)) {
                dt = $table.DataTable();
                dt.destroy();
            }
            $(table).empty();
            $table.hide();
        }

     function loadReport() {

            $("#loading").show();
            $("#divNoData").hide();

            // $("#divTable").html("<table class=\"table table-bordered dataTable dtr-inline \" id=\"tbl_rpt\" role=\"grid\" aria-describedby=\"datatable_info\" style=\"width:100 % !important;\" cellspacing=\"0\"><thead style= \"font-size:11px;width:auto;text-align:center;\" ><tr></tr> </thead ></table >");
            $("input[type=button]").attr("disabled", "disabled");
            $.post("@Url.Action(MVC.Campaign.getcampaigncreatedlist())", $("form").serialize(), function (resp) {

                if (jQuery.isEmptyObject(resp.tdata)) {

                    $("#divNoData span").text(" No data available");
                    //$("#divNoData").show();
                    $("input[type=button]").removeAttr("disabled");
                    $("#loading").hide();
                    $("#divTable").hide();
                    ErrorMsg('No data available');
                }
                else {
                    $("#tbl_rpt").show();
                    $("#divTable").show();
                   
                    rpt_datatable = $("#tbl_rpt").DataTable({                      
                        responsive: true,
                        deferRender: true,
                        "destroy": true,
                        searching: false,

                        data: resp.tdata,
                        columns: resp.thead,
                        'columnDefs': [
                            {
                                "defaultContent": "",
                                "targets": "_all",
                                "className": "text-center",
                            },
                            {
                            
                                
                                "targets": 0,
                                "className": "text-center",
                                "visible": false,
                                "searchable": false
                            },
                            //{
                            //"targets": 10,
                            //"className": "text-left",

                            //"mRender": function (data, type, full) {
                              
                            //       //return '<i class="btn btn-link"onclick="popuptable(this)" id=' + full[0] + ' style="color:blue;font-size:12px;">VIEW</i>';
                            //    if (full[10].length > 3)
                            //        return "<a class='btn btn-default btn sm' onclick=downloadBase('" + full[0] + "');><i class='fa fa-download'></i></a><input id=File_" + full[0] + "  type=hidden value='" + full[10] + "' />";

                            //    }
                            //},  
                            {
                                "targets": 10,
                                "className": "text-center",

                                "mRender": function (data, type, full) {
                                    if (full[10] == "1") {
                                        return '<i class="btn btn-link" onclick="popuptable(this)" id=' + full[0] + ' style="color:blue;font-size:12px;">VIEW</i>';
                                    }
                                    else {
                                        return " ";
                                    }
                                }
                            },   
                            {
                              "targets": 11,
                              "className": "text-center",
                                "mRender": function(data, type, full) {                                
                                 
                                        if (full[8] == "Expired") {
                                            //return '<a class="fas fa-pencil-alt" onclick="EditData(' + full[0] + ')"></a><input id="HFrom_' + full[0] + '" type="hidden" value="' + full[6] + '" />';
                                            return "<a class='btn btn-default btn sm' onclick=EditData('" + full[0] + "');><i class='fas fa-pencil-alt'></i></a><input id=HFrom_" + full[0] + "  type=hidden value='" + full[6] + "' />";
                                        }
                                 }
                            },  
                            
                        ],

                        order: [],
                        fnInitComplete: function (o) {
                           
                            $("#loading").hide();
                            $("input[type=button]").removeAttr("disabled");

                        },

                    });
                }
              //  $('#tbl_rpt tbody tr td .update').removeClass('update').addClass('edit').html('Edit');
                $("#loading").hide();
                $("input[type=button]").removeAttr("disabled");
            }).fail(function (xhr, status, error) {
                $("#loading").hide();
                $("input[type=button]").removeAttr("disabled");
                if (xhr.status == 401) {
                    alert("Click to continue", "Session Timedout", function () {
                        closing = false;
                        window.location = JSON.parse(xhr.responseText).LogOnUrl;
                    })
                }
                else if (xhr.status == 507) {
                    $("#divNoData span").text(" Result is too large.");
                    $("#divNoData").show();
                    $("input[type=button]").removeAttr("disabled");
                } else {
                    ErrorMsg('Unable to fetch data from server');
                    //alert("Unable to fetch data from server", "Failed");

                }
            });
        }


        function popuptable(event) {
          
            var id = event.id;
              $.ajax({
               url: "@Url.Action(MVC.Campaign.CampaignLisTestReportNew())",            
                type: 'POST',
                  data: { id: id },
                  success: function (resp) {
                     
                      if (jQuery.isEmptyObject(resp.tdata)) {                       
                          ErrorMsg('No data available');
                      }
                      else {
                          rpt_datatable = $("#tbl_TestSMSDetails").DataTable({
                              responsive: true,
                              deferRender: true,
                              "destroy": true,
                              data: resp.tdata,
                              columns: resp.thead,
                              autoWidth: false,
                              searching: false,
                              'columnDefs': [
                                 {
                                      "targets": 7,
                                      
                                      "visible": false,
                                      "searchable": false,
                                      "className": "text-center"
                                  },
                                  {
                                      "targets": [0, 1, 2, 4, 5, 6],
                                      "width": "5%",
                                      "className":"text-center"
                                      
                                  },
                                  {
                                      "targets": 3,
                                     
                                      "className": "text-center"

                                  },
                              ],
                              order: [],
                              fnInitComplete: function (o) {
                                  $("#loading").hide();
                                  $("input[type=button]").removeAttr("disabled");
                              },
                          });
                          $("#ViewModal").modal('show');
                      }
                  }
              
                }).fail(function (xhr, status, error) {
               
                    ErrorMsg('No data available');
                
                });
        }
        function downloadBase(event) {           
            var filed = "File_" + event;            
            var filePath = document.getElementById(filed).value;         
            var filename = filePath.substr(filePath.lastIndexOf('/') + 1);  
             $.ajax({
                type: "post",
                url: '@Url.Action("DownloadFile", "Campaign")',
                 data: { filename: filePath },
                 success: function (response) {
                     //Convert Base64 string to Byte Array.
                    // alert(response);
                     if (response != null && response.length >5) {
                         var bytes = Base64ToBytes(response);
                         //Convert Byte Array to BLOB.
                         var blob = new Blob([bytes], { type: "application/octetstream" });

                         //Check the Browser type and download the File.
                         var isIE = false || !!document.documentMode;
                         if (isIE) {
                             window.navigator.msSaveBlob(blob, fileName);
                         } else {
                             var url = window.URL || window.webkitURL;
                             link = url.createObjectURL(blob);
                             var a = $("<a />");
                             a.attr("download", filename);
                             a.attr("href", link);
                             $("body").append(a);
                             a[0].click();
                             $("body").remove(a);
                         }
                     }
                     else
                         ErrorMsg("File not exists");
                 }
             }).fail(function (xhr, status, error) {
                 $("#loading").hide();
                 $("input[type=button]").removeAttr("disabled");
                 if (xhr.status == 401) {
                     alert("Click to continue", "Session Timedout", function () {
                         closing = false;
                         window.location = JSON.parse(xhr.responseText).LogOnUrl;
                     })
                 }
                 else if (xhr.status == 507) {
                     $("#divNoData span").text(" Result is too large.");
                     $("#divNoData").show();
                     $("input[type=button]").removeAttr("disabled");
                 }
                 else {
                     alert("Unable to fetch data from server", "Failed");

                 }
             });
            
        }        

        function downloadFailedBase(event) {           
            var filed = "FileFail_" + event;            
            var filePath = document.getElementById(filed).value;         
            var filename = filePath.substr(filePath.lastIndexOf('/') + 1);  
             $.ajax({
                type: "post",
                url: '@Url.Action("DownloadFile", "Campaign")',
                 data: { filename: filePath },
                 success: function (response) {
                     //Convert Base64 string to Byte Array.
                    // alert(response);
                     if (response != null && response.length >5) {
                         var bytes = Base64ToBytes(response);
                         //Convert Byte Array to BLOB.
                         var blob = new Blob([bytes], { type: "application/octetstream" });

                         //Check the Browser type and download the File.
                         var isIE = false || !!document.documentMode;
                         if (isIE) {
                             window.navigator.msSaveBlob(blob, fileName);
                         } else {
                             var url = window.URL || window.webkitURL;
                             link = url.createObjectURL(blob);
                             var a = $("<a />");
                             a.attr("download", filename);
                             a.attr("href", link);
                             $("body").append(a);
                             a[0].click();
                             $("body").remove(a);
                         }
                     }
                     else
                         ErrorMsg("File not exists");
                 }
             }).fail(function (xhr, status, error) {
                 $("#loading").hide();
                 $("input[type=button]").removeAttr("disabled");
                 if (xhr.status == 401) {
                     alert("Click to continue", "Session Timedout", function () {
                         closing = false;
                         window.location = JSON.parse(xhr.responseText).LogOnUrl;
                     })
                 }
                 else if (xhr.status == 507) {
                     $("#divNoData span").text(" Result is too large.");
                     $("#divNoData").show();
                     $("input[type=button]").removeAttr("disabled");
                 }
                 else {
                     alert("Unable to download", "Failed");

                 }
             });
            
        }
        function downloadUsedBase(event) {           
            var filed = "FileUsed_" + event;            
            var filePath = document.getElementById(filed).value;         
            var filename = filePath.substr(filePath.lastIndexOf('/') + 1);  
             $.ajax({
                type: "post",
                url: '@Url.Action("DownloadFile", "Campaign")',
                 data: { filename: filePath },
                 success: function (response) {
                     //Convert Base64 string to Byte Array.
                    // alert(response);
                     if (response != null && response.length >5) {
                         var bytes = Base64ToBytes(response);
                         //Convert Byte Array to BLOB.
                         var blob = new Blob([bytes], { type: "application/octetstream" });

                         //Check the Browser type and download the File.
                         var isIE = false || !!document.documentMode;
                         if (isIE) {
                             window.navigator.msSaveBlob(blob, fileName);
                         } else {
                             var url = window.URL || window.webkitURL;
                             link = url.createObjectURL(blob);
                             var a = $("<a />");
                             a.attr("download", filename);
                             a.attr("href", link);
                             $("body").append(a);
                             a[0].click();
                             $("body").remove(a);
                         }
                     }
                     else
                         ErrorMsg("File not exists");
                 }
             }).fail(function (xhr, status, error) {
                 $("#loading").hide();
                 $("input[type=button]").removeAttr("disabled");
                 if (xhr.status == 401) {
                     alert("Click to continue", "Session Timedout", function () {
                         closing = false;
                         window.location = JSON.parse(xhr.responseText).LogOnUrl;
                     })
                 }
                 else if (xhr.status == 507) {
                     $("#divNoData span").text(" Result is too large.");
                     $("#divNoData").show();
                     $("input[type=button]").removeAttr("disabled");
                 }
                 else {
                     alert("Unable to download", "Failed");

                 }
             });
            
        }
        function Base64ToBytes(base64) {
            var s = window.atob(base64);
            var bytes = new Uint8Array(s.length);
            for (var i = 0; i < s.length; i++) {
                bytes[i] = s.charCodeAt(i);
            }
            return bytes;
        };

         function loadReportstatus() {

            $("#loading").show();
            $("#divNoData").hide();
            // $("#divTable").html("<table class=\"table table-bordered dataTable dtr-inline \" id=\"tbl_rpt\" role=\"grid\" aria-describedby=\"datatable_info\" style=\"width:100 % !important;\" cellspacing=\"0\"><thead style= \"font-size:11px;width:auto;text-align:center;\" ><tr></tr> </thead ></table >");
             $("input[type=button]").attr("disabled", "disabled");            
             $.post("@Url.Action(MVC.Campaign.getcampaignstatusReport())", $("form").serialize(), function (resp) {
                 
                if (jQuery.isEmptyObject(resp.tdata)) {

                    $("#divNoData span").text(" No data available");
                    //$("#divNoData").show();
                    $("input[type=button]").removeAttr("disabled");
                    $("#loading").hide();
                    $("#divTable").hide();
                    ErrorMsg('No data available');
                }
                else {
                    $("#tbl_rptstatus").show();
                    $("#divTable").show();
                    rpt_datatable = $("#tbl_rptstatus").DataTable({
                        responsive: true,
                        deferRender: true,
                        "destroy": true,
                        searching: false,

                        data: resp.tdata,
                        columns: resp.thead,
                        'columnDefs': [
                            {
                                "targets": 0,
                                "className": "text-center",
                                "visible": false,
                                "searchable": false
                            },
                            {
                                "targets": "_all",
                                "className": "text-center",
                                
                            },
                         {
                            "targets": 11,
                            "className": "text-center",

                            "mRender": function (data, type, full) {
                                
                                   //return '<i class="btn btn-link"onclick="popuptable(this)" id=' + full[0] + ' style="color:blue;font-size:12px;">VIEW</i>';
                                if (full[11] == "file")
                                    return " ";
                                else
                                    return "<a class='btn btn-default btn sm' onclick=downloadBase('" + full[0] + "');><i class='fa fa-download'></i></a><input id=File_" + full[0] + "  type=hidden value='" + full[11] + "' />";
                               }
                            }, 
                            {
                                "targets": 12,
                                "className": "text-center",

                                "mRender": function (data, type, full) {

                                    //return '<i class="btn btn-link"onclick="popuptable(this)" id=' + full[0] + ' style="color:blue;font-size:12px;">VIEW</i>';
                                    if (full[12] == "file")
                                        return " ";
                                    else
                                        return "<a class='btn btn-default btn sm' onclick=downloadUsedBase('" + full[0] + "');><i class='fa fa-download'></i></a><input id=FileUsed_" + full[0] + "  type=hidden value='" + full[12] + "' />";
                                }
                            },
                            {
                                "targets": 13,
                                "className": "text-center",

                                "mRender": function (data, type, full) {

                                    //return '<i class="btn btn-link"onclick="popuptable(this)" id=' + full[0] + ' style="color:blue;font-size:12px;">VIEW</i>';
                                    if (full[13] == "file")
                                        return " ";
                                    else
                                        return "<a class='btn btn-default btn sm' onclick=downloadFailedBase('" + full[0] + "');><i class='fa fa-download'></i></a><input id=FileFail_" + full[0] + "  type=hidden value='" + full[13] + "' />";
                                }
                            },
                            {
                                "targets": 16,
                                "className": "text-center",

                                "mRender": function (data, type, full) {
                                  
                                    if (full[16] == "1") {
                                      //  return '<button onclick="changestatus(this,1)" id='+full[0]+' class="fa fa-play" style="color:green;font-size:10px;"></button>';
                                        return '<i onclick="changestatus(this,1)" id=' + full[0] + ' class="fa fa-play" title="Start" style="color:green;font-size:10px;" ></i>';
                                    }
                                    else if ( full[16] == "2") {
                                        return '<i onclick="changestatus(this,2)" id=' + full[0] + ' class="fa fa-pause" title="Pause" style="color:black;font-size:10px;"></i>&nbsp; &nbsp;<i onclick="changestatus(this,4)" id=' + full[0] +' class="fa fa-stop" title="Stop" style="color:red;font-size:10px;"></i>';
                                        //return '<i onclick="changestatus(this,1)" id=' + full[0] + ' class="fa fa-play" style="color:green;font-size:10px;"></i>';
                                    }
                                    else if (full[16] == "3") {
                                        return '<i onclick="changestatus(this,3)" id=' + full[0] + ' class="fa fa-undo" title="Resume" style="color:#cc7a00;font-size:10px;"></i>&nbsp; &nbsp;<i onclick="changestatus(this,4)" id=' + full[0] +' class="fa fa-stop" title="Stop" style="color:red;font-size:10px;"></i>';

                                    }
                                   
                                    else {
                                        //alert(full[15]);
                                        return "";
                                    }
                             }
                            },
                        ],
                        order: [],
                        fnInitComplete: function (o) {
                            $("#loading").hide();
                            $("input[type=button]").removeAttr("disabled");

                        },

                    });
                }
                $("#loading").hide();
                $("input[type=button]").removeAttr("disabled");
            }).fail(function (xhr, status, error) {
                $("#loading").hide();
                $("input[type=button]").removeAttr("disabled");
                if (xhr.status == 401) {
                    alert("Click to continue", "Session Timedout", function () {
                        closing = false;
                        window.location = JSON.parse(xhr.responseText).LogOnUrl;
                    })
                }
                else if (xhr.status == 507) {
                    $("#divNoData span").text(" Result is too large.");
                    $("#divNoData").show();
                    $("input[type=button]").removeAttr("disabled");
                }
                else
                {
                    alert("Unable to fetch data from server,pls wait", "Failed");

                }
            });
        }

        function loadReportreport() {

            $("#loading").show();
            $("#divNoData").hide();

            // $("#divTable").html("<table class=\"table table-bordered dataTable dtr-inline \" id=\"tbl_rpt\" role=\"grid\" aria-describedby=\"datatable_info\" style=\"width:100 % !important;\" cellspacing=\"0\"><thead style= \"font-size:11px;width:auto;text-align:center;\" ><tr></tr> </thead ></table >");
            $("input[type=button]").attr("disabled", "disabled");
            $.post("@Url.Action(MVC.Campaign.getcampaigndetailReport())", $("form").serialize(), function (resp) {
               
                if (jQuery.isEmptyObject(resp.tdata)) {

                    $("#divNoData span").text(" No data available");
                    //$("#divNoData").show();
                    $("input[type=button]").removeAttr("disabled");
                    $("#loading").hide();
                    $("#divTable").hide();
                    ErrorMsg('No data available');
                }
                else {
                    $("#tbl_rptreport").show();
                    $("#divTable").show();
                    rpt_datatable = $("#tbl_rptreport").DataTable({
                        responsive: true,
                        deferRender: true,
                        "destroy": true,
                        searching:false,

                        data: resp.tdata,
                        columns: resp.thead,
                        dom: 'Bfrtip',
                        buttons: [
                            {
                                extend: 'excelHtml5',
                                title: "Campaign Report",
                            },
                            {
                                extend: 'csvHtml5',
                                title: "Campaign Report",
                            }

                        ],
                        'columnDefs': [

                            {
                                "targets": 0,
                                "className": "text-center",
                                "visible": false,
                                "searchable": false




                            },
                            {
                                "targets": "_all",
                                "className": "text-center"
                            },
                        {
                                "targets": 14,
                                "className": "text-center",

                                "mRender": function (data, type, full) {
                        //            if (full[10] == 0) {
                        //                return "NA";
                        //            }
                        //            else {
                                    if (full[14] == 1)
                                        return '<i class="fa fa-download" id=' + full[0] + ' onclick="downLoadReport(this)"></i>';
                                    else
                                        return "";
                        //                return '<a class="btn fa fa-upload" id="upload"  ' + full[10] + '>' + '' + '</a>';
                        //                return '<button class="btn fa fa-upload" id="upload" "  type="button"></button>';
                        //            }
                                }


                        },
                        ],
                        order: [],
                        fnInitComplete: function (o) {
                            $("#loading").hide();
                            $("input[type=button]").removeAttr("disabled");

                        },

                    });
                }
                $("#loading").hide();
                $("input[type=button]").removeAttr("disabled");
            }).fail(function (xhr, status, error) {
                $("#loading").hide();
                $("input[type=button]").removeAttr("disabled");
                if (xhr.status == 401) {
                    alert("Click to continue", "Session Timedout", function () {
                        closing = false;
                        window.location = JSON.parse(xhr.responseText).LogOnUrl;
                    })
                }
                else if (xhr.status == 507) {
                    $("#divNoData span").text(" Result is too large.");
                    $("#divNoData").show();
                    $("input[type=button]").removeAttr("disabled");
                } else {
                    alert("Unable to fetch data from server", "Failed");

                }
            });
        }

        $(".NumFld").inputFilter(function (value) {
            return /^\d*$/.test(value);
        });

        $('#upload').on('click', function () {

            console.log("called");
            //document.getElementById("campaignlistnavitem").classList.remove("active");
            //document.getElementById("uploadlistnavitem").classList.add("active");

            $("#campaignlistnavitem").removeClass("show  active");
            $("#uploadlistnavitem").addClass("show  active");
            $("#campaignlistnav").removeClass("show active");
            $("#uploadbasenav").addClass("show active");
        });


        function redirectToBaseupload() {
          $("#campaigncreationnavitem").removeClass("show  active");
            $("#uploadlistnavitem").addClass("show  active");
         $("#campaignnav").removeClass("show active");
            $("#uploadbasenav").addClass("show active");
        }

        function fileupload() {
            $("#campaignlistnavitem").removeClass("show  active");
            $("#uploadlistnavitem").addClass("show  active");
            $("#campaignnav").removeClass("show active");
            $("#uploadbasenav").addClass("show active");
        }

        function downLoadReport(event) {
            var id = event.id;
           // alert(event.id);
               $.ajax({
                type: "get",
                url: '@Url.Action("DownloadCampaignDetailReport", "Campaign")',
                   data: { id: id },
                   success: function (response) {
                       //Convert Base64 string to Byte Array.
                       var bytes = Base64ToBytes(response);
                      
                       //Convert Byte Array to BLOB.
                       var blob = new Blob([bytes], { type: "application/octetstream" });

                       //Check the Browser type and download the File.
                       var isIE = false || !!document.documentMode;
                       if (isIE) {
                           window.navigator.msSaveBlob(blob, "Report.xlsx");
                       } else {
                           var url = window.URL || window.webkitURL;
                           link = url.createObjectURL(blob);
                           var a = $("<a />");
                           a.attr("download", "Report.xlsx");
                           a.attr("href", link);
                           $("body").append(a);
                           a[0].click();
                           $("body").remove(a);
                       }
                    //console.log(response, "response");
                    //if (response != null && response != "") {
                    //    download(response, "Report.xlsx");
                    //}
                   }
               }).fail(function (xhr, status, error) {
                   $("#loading").hide();
                   $("input[type=button]").removeAttr("disabled");
                   if (xhr.status == 401) {
                       alert("Click to continue", "Session Timedout", function () {
                           closing = false;
                           window.location = JSON.parse(xhr.responseText).LogOnUrl;
                       })
                   }
                   else if (xhr.status == 507) {
                       $("#divNoData span").text(" Result is too large.");
                       $("#divNoData").show();
                       $("input[type=button]").removeAttr("disabled");
                   }
                   else {
                       alert("Unable to fetch data from server", "Failed");

                   }
               });
            
        }


        function changestatus(event, cstatus) {
            //alert(cstatus);
            var campaignid = event.id;
             $.ajax({
                url: "@Url.Action(MVC.Campaign.changeCampaignStatus())",
                type: 'GET',
                 data: { campaignid: campaignid, cstatus: cstatus },
                success: function (minames) {
                   
                    reinitializeDataTable(tbl_rptstatus);
                    loadReportstatus();
                    if (cstatus == "1")
                        SuccessMsg("Started Successfully");
                    else if (cstatus == "2")
                        SuccessMsg("Paused Successfully");
                    else if (cstatus == "3")
                        SuccessMsg("Resumed Successfully");
                    else if (cstatus == "4")
                        SuccessMsg("Stopped Successfully");
                   

                 }
             }).fail(function (xhr, status, error) {
                 $("#loading").hide();
                 $("input[type=button]").removeAttr("disabled");
                 if (xhr.status == 401) {
                     alert("Click to continue", "Session Timedout", function () {
                         closing = false;
                         window.location = JSON.parse(xhr.responseText).LogOnUrl;
                     })
                 }
                 else if (xhr.status == 507) {
                     $("#divNoData span").text(" Result is too large.");
                     $("#divNoData").show();
                     $("input[type=button]").removeAttr("disabled");
                 }
                 else {
                     alert("Unable to fetch data from server", "Failed");

                 }
             });
            
        }

        function getCamapignDetailsforUpload() {

            if ($('#uploadCampaignName').val()!= " ") {
              
                $("#collapseCampaignDetails").addClass("show");
                $("#Uploadingdiv").show();

                geteachcampaigndetails($('#uploadCampaignName').val());
            }
            else {
                $("#collapseCampaignDetails").removeClass("show");
                $("#Uploadingdiv").hide();

            }
        }

        $('#uploadCampaignName').on('change', function () {

            getCamapignDetailsforUpload();
        });

        $('#uploadlistnavitem').on('click', function () {

            getcampigndrowpdown();

        });

        function getcampigndrowpdown() {
             $.ajax({
                url: "@Url.Action(MVC.Campaign.getcampaignnamesList())",
                type: 'GET',
                data: { },
                success: function (minames) {
                    //console.log(minames);
                    $("#uploadCampaignName").html("");
                    $("#uploadCampaignName").append(
                            $('<option></option>').val('').html('-Select-'));
                        $.each(minames, function (i, minames) {
                            $("#uploadCampaignName").append(
                                $('<option></option>').val(minames.VALUE).html(minames.TEXT));
                    });
                  
                   
                 }
             }).fail(function (xhr, status, error) {
                 $("#loading").hide();
                 $("input[type=button]").removeAttr("disabled");
                 if (xhr.status == 401) {
                     alert("Click to continue", "Session Timedout", function () {
                         closing = false;
                         window.location = JSON.parse(xhr.responseText).LogOnUrl;
                     })
                 }
                 else if (xhr.status == 507) {
                     $("#divNoData span").text(" Result is too large.");
                     $("#divNoData").show();
                     $("input[type=button]").removeAttr("disabled");
                 }
                 else {
                     alert("Please select the Campaign Name", "Failed");

                 }
             });
            
        }

        function getcampigndropdownList() {
             $.ajax({
                url: "@Url.Action(MVC.Campaign.getcampaignnames())",
                type: 'GET',
                data: { },
                 success: function (minames) {   
                     
                     $.each(minames, function (i, minames) {                        
                        $("#listcampaignName").append(
                            $('<option></option>').val(minames.VALUE).html(minames.TEXT));
                     });                    
                     $("#uploadCampaignName option:contains(" + $('#campaignName').val()  + ")").attr('selected', 'selected');
                     getCamapignDetailsforUpload();                
                 }
             }).fail(function (xhr, status, error) {
                 $("#loading").hide();
                 $("input[type=button]").removeAttr("disabled");
                 if (xhr.status == 401) {
                     alert("Click to continue", "Session Timedout", function () {
                         closing = false;
                         window.location = JSON.parse(xhr.responseText).LogOnUrl;
                     })
                 }
                 else if (xhr.status == 507) {
                     $("#divNoData span").text(" Result is too large.");
                     $("#divNoData").show();
                     $("input[type=button]").removeAttr("disabled");
                 }
                 else {
                     alert("Unable to fetch data from server", "Failed");

                 }
             });
            
        }

        function gettemplatenameList() {
             $.ajax({
                url: "@Url.Action(MVC.Campaign.gettemplateNameList())",
                type: 'GET',
                data: { },
                 success: function (minames) {   
                     $("#pouptemplateName").html("");
                     $.each(minames, function (i, minames) {                        
                         $("#pouptemplateName").append(
                            $('<option></option>').val(minames.VALUE).html(minames.TEXT));
                     });                    
                     //$("#uploadCampaignName option:contains(" + $('#campaignName').val()  + ")").attr('selected', 'selected');
                     //getCamapignDetailsforUpload();                
                 }
             }).fail(function (xhr, status, error) {
                 $("#loading").hide();
                 $("input[type=button]").removeAttr("disabled");
                 if (xhr.status == 401) {
                     alert("Click to continue", "Session Timedout", function () {
                         closing = false;
                         window.location = JSON.parse(xhr.responseText).LogOnUrl;
                     })
                 }
                 else if (xhr.status == 507) {
                     $("#divNoData span").text(" Result is too large.");
                     $("#divNoData").show();
                     $("input[type=button]").removeAttr("disabled");
                 }
                 else {
                     alert("Unable to fetch data from server", "Failed");

                 }
             });
           
        }

        function getcampignlistdropdownList() {
             $.ajax({
                url: "@Url.Action(MVC.Campaign.getcampaignnames())",
                type: 'GET',
                data: { },
                 success: function (minames) {  
                     $("#statuscampaignName").val(null);
                     $("#reportcampaignName").val(null);
                     
                     $.each(minames, function (i, minames) {                        
                         $("#statuscampaignName").append(
                             $('<option></option>').val(minames.VALUE).html(minames.TEXT));
                         $("#reportcampaignName").append(
                             $('<option></option>').val(minames.VALUE).html(minames.TEXT));
                     });                    
                                   
                 }
             }).fail(function (xhr, status, error) {
                 $("#loading").hide();
                 $("input[type=button]").removeAttr("disabled");
                 if (xhr.status == 401) {
                     alert("Click to continue", "Session Timedout", function () {
                         closing = false;
                         window.location = JSON.parse(xhr.responseText).LogOnUrl;
                     })
                 }
                 else if (xhr.status == 507) {
                     $("#divNoData span").text(" Result is too large.");
                     $("#divNoData").show();
                     $("input[type=button]").removeAttr("disabled");
                 }
                 else {
                     alert("Unable to fetch data from server", "Failed");

                 }
             });
        }


       $('#samplefiledownlod').on('click', function () {
            //alert($("#uploadCampaignName").val());
            var id = $("#uploadCampaignName").val();
            $.ajax({
                type: "get",
                url: '@Url.Action("DownloadsampleFile", "Campaign")',
                data: { id: id },
                success: function (response) {
                    console.log(response, "response");
                    if (response != null && response != "") {
                       download(response, "Upload.csv");
                    }
                }
            });

        });

        
        function geteachcampaigndetails(campaignid) {

            $.ajax({
                url: "@Url.Action(MVC.Campaign.getcampaigndetailsfromid())",
                type: 'GET',
                data: { campaignid: campaignid},
                success: function (minames) {
                   
                   //console.log(minames);
                     var obj = JSON.parse(minames);
                    //console.log(obj); 
                    //alert(obj.VariableCount);
                    if (obj.VariableCount== "")
                        obj.VariableCount = 0;
                    $('#templatevariablecnt').val(obj.VariableCount);
                    document.getElementById("bindcampaignname").innerHTML = obj.campaignName;
                    document.getElementById("bindcampaigntype").innerHTML = obj.campaignType;
                    document.getElementById("bindfromdate").innerHTML = obj.fromDate;
                    document.getElementById("bindtodate").innerHTML = obj.toDate;
                    document.getElementById("bindfromtime").innerHTML = obj.fromTime;
                    document.getElementById("bindtotime").innerHTML = obj.toTime;
                    document.getElementById("bindsenderid").innerHTML = obj.senderId;
                    document.getElementById("bindtemplateid").innerHTML = obj.templateId;
                    document.getElementById("bindmsgcontent").innerHTML = obj.smsContent;
                    var start_date = document.getElementById("bindfromdate").innerHTML + " " + document.getElementById("bindfromtime").innerHTML;
                 
                    var end_date = document.getElementById("bindtodate").innerHTML + " " + document.getElementById("bindtotime").innerHTML;
                    $("#scheduleDate").flatpickr({                       
                        enableTime: true,
                        dateFormat: "d/m/Y h:i K",
                        minDate: start_date,
                        maxDate: end_date
                    });   
                }
            }).fail(function (xhr, status, error) {
                $("#loading").hide();
                $("input[type=button]").removeAttr("disabled");
                if (xhr.status == 401) {
                    alert("Click to continue", "Session Timedout", function () {
                        closing = false;
                        window.location = JSON.parse(xhr.responseText).LogOnUrl;
                    })
                }
                else if (xhr.status == 507) {
                    $("#divNoData span").text(" Result is too large.");
                    $("#divNoData").show();
                    $("input[type=button]").removeAttr("disabled");
                }
                else {
                    alert("Unable to fetch data from server", "Failed");

                }
            });
            
        }
        

        function EditData(CampaignId) {
            var filed = "HFrom_" + CampaignId;
            $('#updatedFromDate').val(document.getElementById(filed).value);
            $('#updatedId').val(CampaignId);
            $("#UpdateModal").modal('show');
        }  

        function resetfunction() {
        
            document.getElementById("Idform").reset();
            $('#StaticSmsDiv').hide();
            $('#dynamicSmsDiv').hide();
            $('#messageScriptdiv').hide();
            $('#testsmsdiv').hide();
            $('#savecampaignM2M').hide();
            $('#campaignsubmit').hide();
            $('#prioritynameDiv').hide();
            $('#priorityDiv').hide();
            $("#Uploadingdiv").hide();
            $("#smstemplatediv").hide();
            $('#CampaignCreationButtondiv').hide();
            $("#campaignId").val(null);
            $("#tbl_rpt").hide();
            $("#tbl_rptstatus").hide();
            $('#tbl_rptstatus').parents('div.dataTables_wrapper').first().hide();
            $("#tbl_rptreport").hide();
            $('#tbl_rptreport').parents('div.dataTables_wrapper').first().hide();
            $("#divTable").hide();
           
            $("input[id=btnShow]").removeAttr("disabled");
            document.getElementById("campaignName").readOnly = false;
        }

      
        const download = (function () {
            const a = document.createElement("a");
            document.body.appendChild(a);
            a.style = "display: none";
            return function (data, fileName) {
                const blob = new Blob([data], { type: "octet/stream" }),
                    url = window.URL.createObjectURL(blob);
                a.href = url;
                a.download = fileName;
                a.click();
                window.URL.revokeObjectURL(url);
            };
        }());

        $(function () {
            $("#btnShow").click(function () {
                gettemplatenameList();
                var rpt_datatable = $("#tbl_templateDetails").DataTable({
                    responsive: false,
                    deferRender: false,
                    searching: false,
                    paging: false,
                    info: false,

                    "destroy": true,
                    data: null,
                    columns: null,
                    autoWidth: false,
                    order: []

                });
                document.getElementById("tbl_templateDetails").innerHTML = "";

                $("select#pouptemplateName").val('0');
                $("select#pouptemplateType").val('0');
                $("select#pouptemplateStatus").val('0');
                $("select#poupContentType").val('0');
                $("#templateModal").modal('show');
            });
        });

         function loadtemplateSearchReport() {

             $("#loading").show();           
            var templateName = $("#pouptemplateName").val();
            var templateType = $("#pouptemplateType").val();
           // var templateStatus = $("#pouptemplateStatus").val();
            var ContentType = $("#poupContentType").val();      
            
              $.ajax({
               url: "@Url.Action(MVC.Campaign.getcampaignSearchReport())",            
                type: 'GET',
                  data: {
                      templateName:templateName,
                      templateType:templateType,
                      //templateStatus:templateStatus,
                      ContentType:ContentType
                  },
                  success: function (resp) {
                     
            
                   rpt_datatable = $("#tbl_templateDetails").DataTable({
                       responsive: true,
                        deferRender: true,
                       "destroy": true,  
                       searching: false,
                        data: resp.tdata,
                       columns: resp.thead,
                       autoWidth: false,
                       
                      
                        'columnDefs': [
                            {
                                "targets": [0,4,8,9,10,11],
                                "className": "text-center",
                                 "visible": false,
                                "searchable": false,
                               
                            },
                            {
                                "targets": [1, 2, 3, 5, 6, 7],
                                "className": "text-center",
                            },
                            {
                               // { width: 200, targets: 0 },
                                "targets": 1,
                                "width": "10%",
                                "className": "text-center", 
                                "mRender": function (data, type, full) {
                                    return '<i onclick="getTamplateDetails(this)"  class="btn btn-link" id=' + full[0] + ' style="color:blue;font-size:10px;">' + full[1] + ' </i><input type="hidden" name="' + full[6] + '"/>';
                                    
                                }
                            },
                           
                            {                                
                                "targets": 5, // SMS Part count                               
                                //"word-break": "break-all",
                                "width": "42%",
                                "className": "text-center", 
                                //"mRender": function (data, type, full) {
                                    
                                //    return '<div  style=" display:table-cell;vertical-align:middle; overflow-x:auto !important;overflow-y:auto !important;">' + full[5] + '</div>';
                                //}
                                
                            },
                            {
                                "targets": 7, // char count
                                "className": "hide-column",
                                //"sClass": "invisible",
                                "className": "text-center", 
                                "mRender": function (data, type, full) {
                                    return '<span style="text=align:center;"id="">' + full[7] + '</span><input id="part_' + full[0] + '" type="hidden" value="' + full[11] + '" />';
                                }
                                //return ' <table style"height:1px;width:1px;"><tr><td><input id="part_' + full[0] + '" type="hidden" value="' + full[8] + '" />< input id = "variablecnt_' + full[0] + '" type = "hidden" value = "' + full[9] + '" /> < input id = "senderId_' + full[0] + '" type = "hidden" value = "' + full[10] + '" /> < input id = "unicode_' + full[0] + '" type = "hidden" value = "' + full[11] + '" /> </td>/tr></table>';

                            },                     
                          
                       ],
                                           
                       order: [],
                        fnInitComplete: function (o) {
                            $("#loading").hide();
                            $("input[type=button]").removeAttr("disabled");
                        },
                   });
                  }
              
              }).fail(function (xhr, status, error) {
                $("#loading").hide();
                $("input[type=button]").removeAttr("disabled");
                if (xhr.status == 401) {
                    alert("Click to continue", "Session Timedout", function () {
                        closing = false;
                        window.location = JSON.parse(xhr.responseText).LogOnUrl;
                    })
                }
                else if (xhr.status == 507) {
                    $("#divNoData span").text(" Result is too large.");
                    $("#divNoData").show();
                    $("input[type=button]").removeAttr("disabled");
                }
                else
                {
                    alert("Unable to fetch data from server", "Failed");

                }
              });
             
         }
        
        $('#uploadfileid').on('click', function () {
            $("#loadingupload").show();
         
            if ($("#Idform").valid()) {

                var fileUpload = $("#fileToUpload").get(0);

                var files = fileUpload.files;

                var fileData = new FormData();
                const fsize = files[0].size;
                console.log(fsize);
                const filesizeinkb = Math.round((fsize / 1024));

                if (filesizeinkb >= 41000) {
                    //$("#loading").hide();
                    ErrorMsg("File is too large,Maximum file size is 40 MB")
                }
                else
                {
                  
                    fileData.append(files[0].name, files[0]);
                    fileData.append("CampaignId", $("#uploadCampaignName").val());
                    fileData.append("uploadCampaignstarttype", $("#uploadCampaignstarttype").val());
                    fileData.append("scheduleDate", $("#scheduleDate").val());
                    fileData.append("uploadpriority", $("#uploadpriority").val());
                    fileData.append("ToDate", document.getElementById("bindtodate").innerHTML);
                    fileData.append("Totime", document.getElementById("bindtotime").innerHTML);
                    fileData.append("FromDate", document.getElementById("bindfromdate").innerHTML);
                    fileData.append("Fromtime", document.getElementById("bindfromtime").innerHTML);
                    fileData.append("Variablcnt", $("#templatevariablecnt").val());
                    showLoadingSpinner();
                    $.ajax({
                        url: "@Url.Action(MVC.Campaign.CampaignBase())",
                        type: 'post',
                        datatype: 'json',
                        contentType: false,
                        processData: false,
                        async: true,
                        data: fileData,
                        success: function (response) {
                            var obj = JSON.parse(response);
                            console.log(obj);

                            if (obj.status == "1") {
                                SuccessMsg(obj.response);
                                resetfunctionUpload();
                                hideLoadingSpinner();
                            }
                            else {
                                ErrorMsg(obj.response);
                                hideLoadingSpinner();
                            }

                        },
                        complete: function () {
                            hideLoadingSpinner();//Request is complete so hide spinner
                        }
                    }).fail(function(xhr, status, error) {
                            $("#loading").hide();
                            $("input[type=button]").removeAttr("disabled");
                            if (xhr.status == 401) {
                                alert("Click to continue", "Session Timedout", function () {
                                    closing = false;
                                    window.location = JSON.parse(xhr.responseText).LogOnUrl;
                                })
                            }
                            else if (xhr.status == 507) {
                                $("#divNoData span").text(" Result is too large.");
                                $("#divNoData").show();
                                $("input[type=button]").removeAttr("disabled");
                            } else {
                                alert("Please select Campaign Name", "Failed");

                            }
                            
                    });

                }
               
            }
            else {
                
                ErrorMsg("Please fill in all fields.")
            }
           

        });
       
    </script>
}
