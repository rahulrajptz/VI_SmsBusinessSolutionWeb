@model Templateprj.Models.Managements.TemplateModel
@{
    System.Data.DataTable project = ViewBag.inboundData;

    ViewBag.Title = "Management";
}

<link href="~/assets/css/common-style.css" rel="stylesheet" />

<div class="row" style="margin-top:50px">
    <div class="col">

        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", id = "Idform" }))
        {

            <div class="container" style="margin-left:10px">
                <div class="row">
                    <div class="wizard-navigation">
                        <div class="col-xs-12 navstyle">
                            <ul class="nav">
                                <li class="nav-item" style="width: 100px;height:35px">
                                    <a style="font-size:9.2846px" class="nav-link" href="@Url.Action("Account", "Management")">
                                        <btn_searchi class="now-ui-icons loader_gear sidebar-mini-icon mt-1"></btn_searchi>
                                        ACCOUUNT
                                    </a>
                                </li>
                                <li class="nav-item " style="width: 111px;height:35px">
                                    <a style="font-size:9.2846px" class="nav-link active" href="@Url.Action("Templates", "Template")">
                                        <i class="now-ui-icons loader_gear sidebar-mini-icon mt-1"></i>
                                        TEMPLATES
                                    </a>
                                </li>
                                <li class="nav-item arrow" style="width: 131px;height:35px">
                                    <a style="font-size:9.2846px" class="nav-link" href="@Url.Action("SenderIds", "Management")">
                                        <i class="now-ui-icons loader_gear sidebar-mini-icon mt-1"></i>
                                        SENDER ID
                                    </a>
                                </li>

                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <div class="tab-content" style="margin-left:15px;margin-top:10px;">
                <div class="tab-pane show active navclr">

                    <div class="row" id="divList">
                        <div class="col">
                            @*Search Filters*@

                            <p>
                                <a class="btn btn-block text-white dropdown-toggle" style="height:25px;text-align:left;background-color:#5f004b;font-size:9.2846px;vertical-align:middle;"
                                   data-toggle="collapse" href="#collapseSearch" role="button" aria-expanded="false">
                                    Search Templates
                                </a>
                            </p>

                            <div class="row" id="collapseSearch">
                                <div class="col-md-2">
                                    @Html.Label("Template Name")

                                    <div class="form-group">
                                        @Html.TextBoxFor(a => a.TemplateName, new { @class = "form-control cl-black", id = "txtName", autocomplete = "off" })
                                        @*<input type="text" id="txtName" name="CustomerName" class="form-control autocomplete" autocomplete="off" />*@
                                        <input type="hidden" id="hfCustomer" name="CustomerId" />
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    @Html.Label("Template Type")
                                    <div class="form-group">
                                        @Html.DropDownListFor(m => m.TemplateTypeId, Model.TemplateTypes, new { @class = "form-control cl-black" })

                                    </div>
                                </div>
                                <div class="col-md-2">
                                    @Html.Label("Template Id")
                                    <div class="form-group">
                                        @Html.TextBoxFor(a => a.TemplateId, new { @class = "form-control cl-black", id = "TemplateId", autocomplete = "off" })
                                        <input type="hidden" id="hfCustomer" name="CustomerId" />
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    @Html.Label("Header/Sender Id")
                                    <div class="form-group">
                                        @Html.TextBoxFor(a => a.HeaderSenderId, new { @class = "form-control cl-black", id = "HeaderSenderId", autocomplete = "off" })
                                        <input type="hidden" id="hfCustomer" name="CustomerId" />
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    @Html.Label("Status")
                                    <div class="form-group">
                                        @Html.DropDownListFor(m => m.StatusId, Model.Status, new { @class = "form-control cl-black", id = "txtName" })

                                    </div>
                                </div>
                                <div class="col-md-2">
                                    @Html.Label("Content Type")
                                    <div class="form-group">
                                        @Html.DropDownListFor(m => m.ContentTypeId, Model.ContentTypes, new { @class = "form-control cl-black" })

                                    </div>
                                </div>

                                <div class="col" style="text-align:right">
                                    <button id="btnSearch" type="button" class="btn btn-outline-danger">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                                            <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"></path>
                                        </svg>
                                        Search
                                    </button>
                                </div>

                            </div>

                            @*Listing table*@
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="card">
                                        <div class="card-body col-12">
                                            <div class="col-12 w-100" id="divTablereport" style="overflow-x:auto !important;">
                                                <a class="btn btn-outline-info" href="AddTemplates" style="float:right"><i class="fa fa-plus"></i></a>

                                                <table id="tbl_rptreport" class="table-striped table-bordered dataTable dtr-inline w-100" role="grid" aria-describedby="datatable_info"></table>
                                            </div>
                                            <div class="alert alert-info" id="divNoData" style="display:none;">
                                                <span>No data found for the search</span>
                                            </div>
                                            <div class="d-flex justify-content-center" id="loading" style="display:none !important;">
                                                <div class="spinner-grow" role="status">
                                                    <span class="sr-only">Loading...</span>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        }

    </div>
</div>
<div class="spinner1" style="display:none">
    <div class="center-div">
        <div class="spinner-grow text-light" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
</div>
@section scripts {

    <link href="~/Scripts/virtualkeyboard/keyboard.css" rel="stylesheet" />
    <script type="text/javascript" src="~/Scripts/virtualkeyboard/keyboard.js" charset="UTF-8"></script>
  
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script type="text/javascript" src="~/assets/js/bootstrap3-typeahead.min.js"></script> 
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js"></script>
    <script src="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.min.css"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/css/select2.min.css" rel="stylesheet" />
    <link href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.min.css" rel="stylesheet" />

    <script>
        $(document).ready(function () {

            if ('@TempData["Message"]' !== '') {
                SuccessMsg('@TempData["Message"]');
            }
        });

     $("#RequestedOn").flatpickr({

            dateFormat: "d/m/Y",

        });

     $("#StatusDate").flatpickr({

            dateFormat: "d/m/Y",

        });

     $(document).on('click', '#btnSearch', function (e) {
                loadReportreport();
       });
     function deleteTemplate(templateId) {
                $.ajax({
                    url: "@Url.Action("Templates", "Template")",
                    data: { id: templateId },
                    type: 'DELETE',
                    success: function (e) {
                        jsondata = JSON.parse(e);
                        if (jsondata.status == "1") {
                            location.reload();
                            SuccessMsg("Successfully removed");
                        }
                        else {
                            ErrorMsg("Failed to remove the template.")
                        }
                    }
                });
            }
     function editTemplate(templateId) {
                alert(templateId);
            }
    </script>

    @*List Templates*@
    <script>
        var columnHeaders = [];
        var columnKeys = [];
        function loadReportreport() {
             
            var coulmnLimit = 1;
            $("#loading").show();
          
      
                $("#divNoData").hide();
                $.post("@Url.Action(MVC.Template.GetTemplates())", $("form").serialize(), function (resp) {
                    $("#loading").hide();
                    $(".spinner-grow").hide();
                    if (jQuery.isEmptyObject(resp.Data)) {
                        $("#divNoData span").text(" No data available");
                        $("#divNoData").show();
                        $("#divTablereport").hide();
                    }
                    else {
                        columnHeaders = resp.Header;
                        columnHeaders = sortResults("Id", true);
                    coulmnLimit = resp.Count;
                    var headers = [{
                        className: 'dt-control',
                        orderable: false,
                        data: null,
                        defaultContent: '',
                    }];
                    var i = 0;
                        $.each(columnHeaders, function (i, item) {
                            i = i + 1;
                        columnKeys.push(item.Data);
                        var title = item.Title;
                        var data = item.Data;
                        /*map[name] = { data: id, title: name };*/
                        headers.push({ "data": data, "title": title, "name": title });
                        if (i > resp.Count) {
                            headers.push({
                                "title": "Manage",
                                "data": "TemplateId",
                                "width": "50px !mportant",
                                "render": function (data1, type, row) {
                                    return `<p>
                                                <a class="edit" title="Add" data-toggle="tooltip" href="AddTemplates/`+ row.ID + `" style="color: #004d00 !important""><i class='fas fa-edit'></i></a>
                                                <a class="delete" title="Add" data-toggle="tooltip" onClick="deleteTemplate(`+ row.ID + `)" style="color: #4a0e0e !important""><i class='fas fa-trash'></i></a>
                                         </p>`;
                                }
                            });
                            return false;
                        }
                    });

                    {
                        $("#tbl_rptreport").show();
                        $("#divTablereport").show();

                        rpt_datatable = $("#tbl_rptreport").DataTable({
                            responsive: true,
                            deferRender: true,
                            "destroy": true,
                            bFilter: false,
                            bInfo: false,
                            "data": resp.Data,
                            "columns":
                                headers,
                            "columnDefs": [
                                { "width": "30px !important", "targets": 0 }
                            ],
                            fnInitComplete: function (o) {
                                $("#loading").hide();
                                $(".spinner-grow").hide();
                            },
                        });
                    }
                }
                 
                }).fail(function (xhr, status, error) {
                    $("#loading").hide();
                    $(".spinner-grow").hide();
                    $("input[type=button]").removeAttr("disabled");
                    if (xhr.status == 401) {
                        alert("Click to continue", "Session Timedout", function () {
                            closing = false;
                            window.location = JSON.parse(xhr.responseText).LogOnUrl;
                        })
                    }
                    else if (xhr.status == 507) {
                        $("#divNoData span").text(" Result is too large.");
                        $("#divNoData").show();
                        $("input[type=button]").removeAttr("disabled");
                    } else {
                        alert("Unable to fetch data from server", "Failed");
                    }
                    });

                $(function () {
                    $("#tbl_rptreport").click(function (event) {
                   
                        event.stopPropagation();
                        var $target = $(event.target);

                        var tr = $target.closest('tr');
                        var row = rpt_datatable.row(tr);

                        if (row.child.isShown()) {
                            // This row is already open - close it
                            row.child.hide();
                            tr.removeClass('shown');
                        } else {
                            // Open this row
                            row.child(format(row.data(), columnHeaders, coulmnLimit, columnKeys)).show();
                            tr.addClass('shown');
                        }
                    });
        });

        }

        /* Formatting function d.TemplateId for row details - modify as you need */
        function format(d,h,c,ck) {
            // `d` is the original data object for the row
            var expandedRpw = '<div class="row expandcontainer g-2 d-flex justify-content-center gx-5" style="padding:4px;margin-left:-12px !important;background:#ffffff">';
          
            for (var key in d) {
                if (!ck.includes(key)) {
                    var titleData = h.find((o) => { return o["Data"] === key });
                    if (titleData != '' && typeof titleData !== 'undefined') {
                        expandedRpw = expandedRpw + '<div class="col-3 border font-weight-bold" >' + titleData.Title + '</div>' + '<div class="col-3 border">'
                            +
                            d[key]
                            + '</div>';
                    }
                }
            }
            expandedRpw = expandedRpw + '</div>';
            return (
                expandedRpw
            );
        }

        function sortResults(prop, asc) {
            columnHeaders.sort(function (a, b) {
                if (asc) {
                    return (a[prop] > b[prop]) ? 1 : ((a[prop] < b[prop]) ? -1 : 0);
                } else {
                    return (b[prop] > a[prop]) ? 1 : ((b[prop] < a[prop]) ? -1 : 0);
                }
            });
            return columnHeaders;
        }

    </script>

    @*Load autofill textboxes and reload report*@
    <script type="text/javascript">

        $(document).ready(function ()
        {
            var items = [];
            var temaplteItems = [];
            var headerItems = [];
                $.ajax({
                                url: "@Url.Action("GetTemplateNames", "Template")",
                                type: "GET",
                                contentType: "application/json; charset=utf-8",
                                success: function (data) {

                                    map = {};
                                    $.each(data.TemaplteNames, function (i, item) {
                                        var id = item.Id;
                                        var name = item.Value;
                                        map[name] = { id: id, name: name };
                                        items.push(name);
                                    });

                                    map = {};
                                    $.each(data.TemplateIds, function (i, item) {
                                        var id = item.Id;
                                        var name = item.Value;
                                        map[name] = { id: id, name: name };
                                        temaplteItems.push(name);
                                    });


                                    map = {};
                                    $.each(data.Headers, function (i, item) {
                                        var id = item.Id;
                                        var name = item.Value;
                                        map[name] = { id: id, name: name };
                                        headerItems.push(name);
                                    });

                                },
                                error: function (response) {
                                    alert(response.responseText);
                                },
                                failure: function (response) {
                                    alert(response.responseText);
                                }
                            });

            $('#txtName').typeahead({
                source: function (request, response) {
                    response(items);
                },
                matcher: function (item) {
                    if (item.toLowerCase().indexOf(this.query.trim().toLowerCase()) != -1) {
                        return true;
                    }
                },
                updater: function (item) {
                    return item;
                }
            });

            $('#TemplateId').typeahead({
                source: function (request, response) {
                    response(temaplteItems);
                },
                matcher: function (item) {
                    if (item.toLowerCase().indexOf(this.query.trim().toLowerCase()) != -1) {
                        return true;
                    }
                },
                updater: function (item) {
                    return item;
                }
            });

            $('#HeaderSenderId').typeahead({
                source: function (request, response) {
                    response(headerItems);
                },
                matcher: function (item) {
                    if (item.toLowerCase().indexOf(this.query.trim().toLowerCase()) != -1) {
                        return true;
                    }
                },
                updater: function (item) {
                    return item;
                }
            });
            loadReportreport();
       });


    </script>

}
